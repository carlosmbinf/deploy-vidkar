{"version":3,"sources":["meteor://ðŸ’»app/imports/ui/pages/collections/collections.js","meteor://ðŸ’»app/server/Ejecutar.js","meteor://ðŸ’»app/server/metodos.js","meteor://ðŸ’»app/server/publicaciones.js","meteor://ðŸ’»app/server/rutas.js","meteor://ðŸ’»app/server/serverproxy3002.js","meteor://ðŸ’»app/server/startup.js","meteor://ðŸ’»app/server/tareas.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","PelisCollection","DescargasCollection","TVCollection","OnlineCollection","MensajesCollection","RegisterDataUsersCollection","LogsCollection","ServersCollection","PreciosCollection","VentasCollection","FilesCollection","VersionsCollection","SchemaRegisterDataUsersCollection","SchemaVentasCollection","SchemaPreciosCollection","SchemaLogsCollection","SchemaOnlineCollection","SchemaMensajesCollection","SchemaTVCollection","SchemaPelisCollection","SchemaDescargaCollection","SchemaServersCollection","SchemaFilesCollection","Mongo","link","v","SimpleSchema","default","Meteor","extendOptions","Collection","methods","exportDataTo","urlMongoDB","mi","require","fields","find","fetch","db","collection","host","callback","err","console","error","log","users","userId","type","String","optional","fecha","Date","autoValue","isInsert","isUpsert","$setOnInsert","unset","vpnMbGastados","Number","defaultValue","megasGastadosinBytes","megasGastadosinBytesGeneral","attachSchema","adminId","createdAt","cobrado","Boolean","cobradoAlAdmin","precio","comentario","gananciasAdmin","megas","heredaDe","detalles","userAdmin","userAfectado","message","address","connectionId","loginAt","hostname","from","to","mensaje","leido","nombreTV","urlTV","urlBackground","descripcion","mostrar","vistas","nombrePeli","urlPeli","urlTrailer","tamano","subtitulo","year","textSubtitle","clasificacion","Array","idimdb","idFile","nombreFile","tamanoFile","comentarios","descargadoPor","thumbnail","urlReal","url","domain","ip","active","details","nombre","allow","insert","doc","update","remove","findOne","_id","profile","role","modifier","Promise","exec","execute","command","cmd","resolve","reject","stdout","stderr","exports","Accounts","isServer","streamToString","stream","chunks","on","chunk","push","Buffer","concat","toString","result","getusers","filter","sort","vpnip","setOnlineVPN","id","datachange","$set","addUser","user","createUser","sendemail","text","subject","admin","bloqueadoDesbloqueadoPor","emails","pass","fullResult","sendMensaje","username","settings","public","administradores","insertPelis","pelicula","exist","peli","poster","subtitle","srt2vtt","fs","appRoot","subtituloFile","path","https","get","response","pipe","then","data","multi","imdbId","IMDb","trailer","Plot","Genres","split","reason","errorType","getListadosPreciosOficiales","getAdminPrincipal","adminPrincipal","getPrecioOficial","compra","precioOficial","addVentasOnly","userChangeid","userChange","call","addVentasProxy","isIlimitado","baneado","includes","desabilitarProxyUser","habilitarProxyUser","habilitarProxyUserinVentas","userUsername","adminusername","desabilitarProxyUserinVentas","addVentasVPN","vpnisIlimitado","vpnplus","vpnmegas","vpn","desabilitarVPNUser","habilitarVPNUser","vpn2mb","nextIp","setMensaje","handleClickOpen","setConsumoProxy","status","count","contandoProxy","getUrlTriller","publish","selector","option","bodyParser","WebApp","router","endpoint","http","post","got","htmlUrls","conteoPost","getPeli","TypeError","body","html","linksPeli","peliurl","subtitleurl","posterurl","insertPeli","req","res","pelis","links","i","length","value","replace","a","forEach","element","query","idPeli","pelisubtitle","setHeader","end","writeHead","usuarios","index","passvpn","u","JSON","stringify","readFile","writeFile","setUsername","password","setPassword","email","movil","videoFile","existsSync","unlinkSync","map","peliGeneral","json","route","gastos","totalAPagar","resultado","usuario","pago","firstName","lastName","debe","q","upsert","connectHandlers","use","urlencoded","extended","conect","server","IP","disconect","stats","conn","bytesGastados","srcTxBytes","srcRxBytes","bytesGastadosGeneral","trgTxBytes","trgRxBytes","$inc","cron","ProxyChain","bcrypt","crypto","server2","Server","port","authRealm","prepareRequestFunction","request","isHttp","b","userInput","Hash","digest","compareSync","services","requestAuthentication","failMsg","listen","schedule","arrayIds","getConnectionIds","connection","scheduled","timezone","start","closeproxy","close","listenproxy","startup","us","facebook","picture","google","process","env","ROOT_URL","MONGO_URL","ServiceConfiguration","configurations","service","clientId","client_id","secret","client_secret","validClientIds","appId","creadoPor","edad","$or","$gte","fechaSubscripcion","vpnfechaSubscripcion","isClient","onConnection","clientAddress","onClose","onLogin","info","onLogout","onCreateUser","options","first_name","last_name","name","online","descuentoproxy","descuentovpn","contandoVPN","given_name","family_name","after"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\r\nimport SimpleSchema from 'simpl-schema';\r\nimport { Meteor } from \"meteor/meteor\";\r\n\r\n\r\nSimpleSchema.extendOptions(['autoform']);\r\n\r\nexport const PelisCollection = new Mongo.Collection('pelisRegister');\r\nexport const DescargasCollection = new Mongo.Collection('descargasRegister');\r\nexport const TVCollection = new Mongo.Collection('tvRegister');\r\nexport const OnlineCollection = new Mongo.Collection('online');\r\nexport const MensajesCollection = new Mongo.Collection('mensajes');\r\nexport const RegisterDataUsersCollection = new Mongo.Collection('registerDataUsers');\r\nexport const LogsCollection = new Mongo.Collection('Logs');\r\nexport const ServersCollection = new Mongo.Collection('servers');\r\nexport const PreciosCollection = new Mongo.Collection('precios');\r\nexport const VentasCollection = new Mongo.Collection('ventas');\r\nexport const FilesCollection = new Mongo.Collection('files');\r\nexport const VersionsCollection = new Mongo.Collection('versions');\r\n\r\n\r\n\r\nMeteor.methods({\r\n async exportDataTo(urlMongoDB) {\r\n  var mi = require(\"mongoimport\");\r\n   try {\r\n    await mi({\r\n       fields: PelisCollection.find().fetch(), // {array} data to import\r\n       db: \"meteor\", // {string} name of db\r\n       collection: 'pelisRegister', // {string|function} name of collection, or use a function to\r\n       //  return a name, accept one param - [fields] the fields to import\r\n       host: urlMongoDB,\r\n       callback: (err, db) => {\r\n         err && console.error(err);\r\n       },\r\n     });\r\n   } catch (error) {\r\n     console.log(error);\r\n   }\r\n  \r\n   try {\r\n    await mi({\r\n      fields: DescargasCollection.find().fetch(), // {array} data to import\r\n      db: \"meteor\", // {string} name of db\r\n      collection: 'descargasRegister', // {string|function} name of collection, or use a function to\r\n      //  return a name, accept one param - [fields] the fields to import\r\n      host: urlMongoDB,\r\n      callback: (err, db) => {\r\n        err && console.error(err);\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n\r\n  try {\r\n    await mi({\r\n      fields: TVCollection.find().fetch(), // {array} data to import\r\n      db: \"meteor\", // {string} name of db\r\n      collection: 'tvRegister', // {string|function} name of collection, or use a function to\r\n      //  return a name, accept one param - [fields] the fields to import\r\n      host: urlMongoDB,\r\n      callback: (err, db) => {\r\n        err && console.error(err);\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n\r\n  // try {\r\n  //   await mi({\r\n  //     fields: OnlineCollection.find().fetch(), // {array} data to import\r\n  //     db: \"meteor\", // {string} name of db\r\n  //     collection: 'online', // {string|function} name of collection, or use a function to\r\n  //     //  return a name, accept one param - [fields] the fields to import\r\n  //     host: urlMongoDB,\r\n  //     callback: (err, db) => {\r\n  //       err && console.error(err);\r\n  //     },\r\n  //   });\r\n  // } catch (error) {\r\n  //   console.log(error);\r\n    \r\n  // }\r\n\r\n  try {\r\n    await mi({\r\n      fields: MensajesCollection.find().fetch(), // {array} data to import\r\n      db: \"meteor\", // {string} name of db\r\n      collection: 'mensajes', // {string|function} name of collection, or use a function to\r\n      //  return a name, accept one param - [fields] the fields to import\r\n      host: urlMongoDB,\r\n      callback: (err, db) => {\r\n        err && console.error(err);\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n\r\n  try {\r\n    await mi({\r\n      fields: RegisterDataUsersCollection.find().fetch(), // {array} data to import\r\n      db: \"meteor\", // {string} name of db\r\n      collection: 'registerDataUsers', // {string|function} name of collection, or use a function to\r\n      //  return a name, accept one param - [fields] the fields to import\r\n      host: urlMongoDB,\r\n      callback: (err, db) => {\r\n        err && console.error(err);\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n\r\n  try {\r\n    await mi({\r\n      fields: LogsCollection.find().fetch(), // {array} data to import\r\n      db: \"meteor\", // {string} name of db\r\n      collection: 'Logs', // {string|function} name of collection, or use a function to\r\n      //  return a name, accept one param - [fields] the fields to import\r\n      host: urlMongoDB,\r\n      callback: (err, db) => {\r\n        err && console.error(err);\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n\r\n  try {\r\n    await mi({\r\n      fields: ServersCollection.find().fetch(), // {array} data to import\r\n      db: \"meteor\", // {string} name of db\r\n      collection: 'servers', // {string|function} name of collection, or use a function to\r\n      //  return a name, accept one param - [fields] the fields to import\r\n      host: urlMongoDB,\r\n      callback: (err, db) => {\r\n        err && console.error(err);\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n\r\n  try {\r\n    await mi({\r\n      fields: PreciosCollection.find().fetch(), // {array} data to import\r\n      db: \"meteor\", // {string} name of db\r\n      collection: 'precios', // {string|function} name of collection, or use a function to\r\n      //  return a name, accept one param - [fields] the fields to import\r\n      host: urlMongoDB,\r\n      callback: (err, db) => {\r\n        err && console.error(err);\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n\r\n  try {\r\n    await mi({\r\n      fields: VentasCollection.find().fetch(), // {array} data to import\r\n      db: \"meteor\", // {string} name of db\r\n      collection: 'ventas', // {string|function} name of collection, or use a function to\r\n      //  return a name, accept one param - [fields] the fields to import\r\n      host: urlMongoDB,\r\n      callback: (err, db) => {\r\n        err && console.error(err);\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n\r\n  try {\r\n    await mi({\r\n      fields: Meteor.users.find().fetch(), // {array} data to import\r\n      db: \"meteor\", // {string} name of db\r\n      collection: 'users', // {string|function} name of collection, or use a function to\r\n      //  return a name, accept one param - [fields] the fields to import\r\n      host: urlMongoDB,\r\n      callback: (err, db) => {\r\n        err && console.error(err);\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n    \r\n  try {\r\n    await mi({\r\n      fields: FilesCollection.find().fetch(), // {array} data to import\r\n      db: \"meteor\", // {string} name of db\r\n      collection: 'files', // {string|function} name of collection, or use a function to\r\n      //  return a name, accept one param - [fields] the fields to import\r\n      host: urlMongoDB,\r\n      callback: (err, db) => {\r\n        err && console.error(err);\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n\r\n  },\r\n});\r\nexport const SchemaRegisterDataUsersCollection = new SimpleSchema({\r\n  userId: {\r\n    type: String,\r\n    optional: false,\r\n  },\r\n  fecha: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    },\r\n    optional: true,\r\n  },\r\n  vpnMbGastados: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n    optional: true,\r\n  },\r\n  megasGastadosinBytes: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n    optional: true,\r\n  },\r\n  megasGastadosinBytesGeneral: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n    optional: true,\r\n  },\r\n  type: {\r\n    type: String,\r\n    defaultValue: \"proxy\",\r\n    optional: false,\r\n  },\r\n});\r\n\r\nRegisterDataUsersCollection.attachSchema(SchemaRegisterDataUsersCollection);\r\n\r\nexport const SchemaVentasCollection = new SimpleSchema({\r\n  adminId: {\r\n    type: String,\r\n    optional: false,\r\n  },\r\n  userId: {\r\n    type: String,\r\n    optional: false,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    },\r\n    optional: false,\r\n  },\r\n  cobrado: {\r\n    type: Boolean,\r\n    defaultValue: false,\r\n    optional: true,\r\n  },\r\n  cobradoAlAdmin: {\r\n    type: Boolean,\r\n    defaultValue: false,\r\n    optional: true,\r\n  },\r\n  precio: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n    optional: true,\r\n  },\r\n  comentario: {\r\n    type: String,\r\n    optional: true,\r\n  },\r\n  gananciasAdmin:{\r\n    type: Number,\r\n    defaultValue: 0,\r\n    optional:true\r\n  }\r\n\r\n});\r\n\r\nVentasCollection.attachSchema(SchemaVentasCollection);\r\n\r\nexport const SchemaPreciosCollection = new SimpleSchema({\r\n  userId: {\r\n    type: String,\r\n    optional: false,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    },\r\n    optional: false,\r\n  },\r\n  precio: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n    optional: true,\r\n  },\r\n  type: {\r\n    type: String,\r\n    optional: false,\r\n  },\r\n  megas: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n    optional: true,\r\n  },\r\n  heredaDe: {\r\n    type: String,\r\n    optional: true,\r\n    defaultValue: null,\r\n  },\r\n  comentario: {\r\n    type: String,\r\n    optional: true,\r\n  },\r\n  detalles: {\r\n    type: String,\r\n    optional: true,\r\n  },\r\n});\r\n\r\nPreciosCollection.attachSchema(SchemaPreciosCollection);\r\n\r\nexport const SchemaLogsCollection = new SimpleSchema({\r\n  type: {\r\n    type: String\r\n  },\r\n  userAdmin: {\r\n    type: String\r\n  },\r\n  userAfectado: {\r\n    type: String\r\n  },\r\n  message: {\r\n    type: String\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    }\r\n  }\r\n  \r\n});\r\n\r\nLogsCollection.attachSchema(SchemaLogsCollection);\r\n\r\nexport const SchemaOnlineCollection = new SimpleSchema({\r\n  address: {\r\n    type: String,\r\n  },\r\n  connectionId: {\r\n    type: String,\r\n    optional: true,\r\n  },\r\n  userId: {\r\n    type: String,\r\n    optional: true,\r\n  },\r\n  loginAt: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    },\r\n    optional: true,\r\n  },\r\n  hostname: {\r\n    type: String,\r\n    optional: true,\r\n  },\r\n  megasGastadosinBytes: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n    optional: true,\r\n  },\r\n  megasGastadosinBytesGeneral: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n    optional: true,\r\n  },\r\n});\r\n\r\nOnlineCollection.attachSchema(SchemaOnlineCollection);\r\n\r\nexport const SchemaMensajesCollection = new SimpleSchema({\r\n  from : {\r\n    type: String,\r\n  },\r\n  to : {\r\n    type: String,\r\n  },\r\n  mensaje : {\r\n    type: String,\r\n    optional: true,\r\n  },\r\n  leido : {\r\n    type: Boolean,\r\n    defaultValue: false,\r\n    optional: true,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    }\r\n  },\r\n  type:{\r\n    type: String,\r\n    defaultValue: \"text\",\r\n    optional: true,\r\n  }\r\n});\r\n\r\nMensajesCollection.attachSchema(SchemaMensajesCollection);\r\nexport const SchemaTVCollection = new SimpleSchema({\r\n  nombreTV:{\r\n    type: String,\r\n  },\r\n  urlTV: {\r\n    type: String,\r\n  },\r\n  urlBackground: {\r\n    type: String,    \r\n    defaultValue: \"\",\r\n  },\r\n  descripcion: {\r\n    type: String,\r\n    defaultValue: \"\",\r\n  },\r\n  mostrar:{\r\n    type: String,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    }\r\n  },\r\n  vistas: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n  },\r\n});\r\n\r\nTVCollection.attachSchema(SchemaTVCollection);\r\n\r\nexport const SchemaPelisCollection = new SimpleSchema({\r\n  nombrePeli:{\r\n    type: String,\r\n  },\r\n  urlPeli: {\r\n    type: String,\r\n  },\r\n  urlBackground: {\r\n    type: String,\r\n  },\r\n  descripcion: {\r\n    type: String,\r\n  },\r\n  urlTrailer: {\r\n    type: String,\r\n    defaultValue: \"\",\r\n    optional: true\r\n  },\r\n  tamano:{\r\n    type: String,\r\n  },\r\n  mostrar:{\r\n    type: String,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    }\r\n  },\r\n  subtitulo: {\r\n    type: String,\r\n    defaultValue: \"\",\r\n    optional: true,\r\n  },\r\n  vistas: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n  },\r\n  year: {\r\n    type: Number,\r\n    defaultValue: 1900,\r\n    // min: 1900,\r\n  },\r\n  textSubtitle: {\r\n    type: String,\r\n    defaultValue: \"\",\r\n    optional: true,\r\n  },\r\n  clasificacion: {\r\n    type: Array,\r\n    defaultValue: [],\r\n  },\r\n  'clasificacion.$': { type: String },\r\n  idimdb:{\r\n      type: String,\r\n      defaultValue: \"\",\r\n      optional: true,\r\n  }\r\n});\r\n\r\nPelisCollection.attachSchema(SchemaPelisCollection);\r\n\r\nexport const SchemaDescargaCollection = new SimpleSchema({\r\n  idFile: {\r\n    type: String,\r\n  },\r\n  nombreFile: {\r\n    type: String,\r\n  },\r\n  tamanoFile: {\r\n    type: String,\r\n    defaultValue: \"\",\r\n    optional: true,\r\n  },\r\n  comentarios: {\r\n    type: String,\r\n    defaultValue: \"\",\r\n    optional: true,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    }\r\n  },\r\n  descargadoPor:{\r\n    type: String,\r\n  },\r\n  thumbnail:{\r\n    type: String,\r\n  },\r\n  urlReal:{\r\n    type: String,\r\n  },\r\n  url:{\r\n    type: String,\r\n    defaultValue: \"\",\r\n    optional: true,\r\n  },\r\n  vistas: {\r\n    type: Number,\r\n    defaultValue: 0,\r\n  },\r\n});\r\n\r\nDescargasCollection.attachSchema(SchemaDescargaCollection)\r\n\r\nexport const SchemaServersCollection = new SimpleSchema({\r\n  domain: {\r\n    type: String,\r\n  },\r\n  ip: {\r\n    type: String,\r\n  },\r\n  active:{\r\n    type: Boolean,\r\n    defaultValue: true,\r\n    optional: true,\r\n  },\r\n  details:{\r\n    type: String,\r\n    defaultValue: \"\",\r\n    optional:true\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nServersCollection.attachSchema(SchemaServersCollection)\r\n\r\nexport const SchemaFilesCollection = new SimpleSchema({\r\n  nombre: {\r\n    type: String,\r\n    optional:false\r\n\r\n  },\r\n  url: {\r\n    type: String,\r\n    optional:false\r\n  },\r\n  details:{\r\n    type: String,\r\n    defaultValue: \"\",\r\n    optional:true\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    autoValue: function() {\r\n      if (this.isInsert) {\r\n        return new Date();\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()};\r\n      } else {\r\n        this.unset();  // Prevent user from supplying their own value\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nFilesCollection.attachSchema(SchemaFilesCollection)\r\n\r\nFilesCollection.allow({\r\n  insert(doc) {\r\n    // The user must be logged in and the document must be owned by the user.\r\n    return true;\r\n  },\r\n\r\n  update() {\r\n    // Can only change your own documents.\r\n    return true;\r\n  },\r\n\r\n  remove(userId, doc) {\r\n    // Can only remove your own documents.\r\n    return Meteor.users.findOne({ _id: userId }).profile.role == \"admin\";\r\n  },\r\n});\r\n\r\nLogsCollection.allow({\r\n  insert(doc) {\r\n    // The user must be logged in and the document must be owned by the user.\r\n    return true;\r\n  },\r\n\r\n  update() {\r\n    // Can only change your own documents.\r\n    return true;\r\n  },\r\n\r\n  remove(userId, doc) {\r\n    // Can only remove your own documents.\r\n    return Meteor.users.findOne({ _id: userId }).profile.role == \"admin\";\r\n  },\r\n});\r\n\r\nRegisterDataUsersCollection.allow({\r\n  insert(doc) {\r\n      // The user must be logged in and the document must be owned by the user.\r\n      return true;\r\n    },\r\n  \r\n    update() {\r\n      // Can only change your own documents.\r\n      return true;\r\n    },\r\n  \r\n    remove(userId, doc) {\r\n      // Can only remove your own documents.\r\n      return Meteor.users.findOne({ _id: userId }).profile.role == \"admin\";\r\n    },\r\n})\r\nOnlineCollection.allow({\r\n  insert(doc) {\r\n      // The user must be logged in and the document must be owned by the user.\r\n      return true;\r\n    },\r\n  \r\n    update() {\r\n      // Can only change your own documents.\r\n      return true;\r\n    },\r\n  \r\n    remove(userId, doc) {\r\n      // Can only remove your own documents.\r\n      return true;\r\n    },\r\n})\r\nTVCollection.allow({\r\n  insert(doc) {\r\n      // The user must be logged in and the document must be owned by the user.\r\n      return true;\r\n    },\r\n  \r\n    update() {\r\n      // Can only change your own documents.\r\n      return true;\r\n    },\r\n  \r\n    remove(userId, doc) {\r\n      // Can only remove your own documents.\r\n      return Meteor.users.findOne({ _id: userId }).profile.role == \"admin\";\r\n    },\r\n})\r\nPelisCollection.allow({\r\n    insert(doc) {\r\n        // The user must be logged in and the document must be owned by the user.\r\n        return true;\r\n      },\r\n    \r\n      update() {\r\n        // Can only change your own documents.\r\n        return true;\r\n      },\r\n    \r\n      remove(userId, doc) {\r\n        // Can only remove your own documents.\r\n        return Meteor.users.findOne({ _id: userId }).profile.role == \"admin\";\r\n      },\r\n})\r\nDescargasCollection.allow({\r\n  insert(doc) {\r\n      // The user must be logged in and the document must be owned by the user.\r\n      return true;\r\n    },\r\n  \r\n    update(userId, doc, fields, modifier) {\r\n      // Can only change your own documents.\r\n      return true;\r\n    },\r\n  \r\n    remove(userId, doc) {\r\n      // Can only remove your own documents.\r\n      return Meteor.users.findOne({ _id: userId }).profile.role == \"admin\";\r\n    },\r\n})\r\nMeteor.users.allow({\r\n  insert(doc) {\r\n      // The user must be logged in and the document must be owned by the user.\r\n      return true;\r\n    },\r\n  \r\n    update(userId, doc, fields, modifier) {\r\n      // Can only change your own documents.\r\n      return true;\r\n    },\r\n  \r\n    remove(userId, doc) {\r\n      // Can only remove your own documents.\r\n      return Meteor.users.findOne({ _id: userId }).profile.role == \"admin\";\r\n    },\r\n})\r\nVentasCollection.allow({\r\n  insert(doc) {\r\n      // The user must be logged in and the document must be owned by the user.\r\n      return true;\r\n    },\r\n  \r\n    update(userId, doc, fields, modifier) {\r\n      // Can only change your own documents.\r\n      return true;\r\n    },\r\n  \r\n    remove(userId, doc) {\r\n      // Can only remove your own documents.\r\n      return Meteor.users.findOne({ _id: userId }).profile.role == \"admin\";\r\n    },\r\n})\r\nMensajesCollection.allow({\r\n  insert(doc) {\r\n      // The user must be logged in and the document must be owned by the user.\r\n      return true;\r\n    },\r\n  \r\n    update(userId, doc, fields, modifier) {\r\n      // Can only change your own documents.\r\n      return true;\r\n    },\r\n  \r\n    remove(userId, doc) {\r\n      // Can only remove your own documents.\r\n      return true;\r\n    },\r\n})\r\nServersCollection.allow({\r\n  insert(doc) {\r\n    // The user must be logged in and the document must be owned by the user.\r\n    return true;\r\n  },\r\n\r\n  update(userId, doc, fields, modifier) {\r\n    // Can only change your own documents.\r\n    return true;\r\n  },\r\n\r\n  remove(userId, doc) {\r\n    // Can only remove your own documents.\r\n    return true;\r\n  },\r\n});\r\n\r\nPreciosCollection.allow({\r\n  insert(userId,doc) {\r\n    // The user must be logged in and the document must be owned by the user.\r\n    return true;\r\n  },\r\n\r\n  update(userId, doc, fields, modifier) {\r\n    // Can only change your own documents.\r\n    return true;\r\n  },\r\n\r\n  remove(userId, doc) {\r\n    // Can only remove your own documents.\r\n    return Meteor.users.findOne({ _id: userId }).profile.role == \"admin\";\r\n  },\r\n});\r\n","var Promise = require('bluebird').Promise;\r\nvar exec = require('child_process').exec;\r\n\r\n// retuen a promise(text)\r\nfunction execute(command) {\r\n  var cmd = command;\r\n  try {\r\n    return new Promise(function (resolve, reject) {\r\n      exec(cmd, function (error, stdout, stderr) {\r\n        if (error) {\r\n          reject(error);\r\n        } else {\r\n          resolve(stdout);\r\n        }\r\n      });\r\n    });\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n}\r\n\r\nmodule.exports = execute;","import { Meteor } from \"meteor/meteor\";\r\nimport { Accounts } from 'meteor/accounts-base'\r\nimport execute from './Ejecutar'\r\nimport {\r\n  OnlineCollection,\r\n  PelisCollection,\r\n  MensajesCollection,\r\n  ServersCollection,\r\n  PreciosCollection,\r\n  VentasCollection,\r\n  FilesCollection,\r\n  VersionsCollection,\r\n  LogsCollection,\r\n  DescargasCollection,\r\n  TVCollection,\r\n  RegisterDataUsersCollection\r\n} from \"../imports/ui/pages/collections/collections\";\r\n\r\nif (Meteor.isServer) {\r\n  console.log(\"Cargando MÃ©todos...\");\r\n  function streamToString(stream) {\r\n    const chunks = [];\r\n    return new Promise((resolve, reject) => {\r\n      stream.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\r\n      stream.on('error', (err) => reject(err));\r\n      stream.on('end', () => resolve(Buffer.concat(chunks).toString('utf8')));\r\n    })\r\n  }\r\n\r\n  Meteor.methods({\r\n    execute: async function (command) {\r\n      try {\r\n        let result = await execute(command);\r\n        return result\r\n      } catch (error) {\r\n        console.log(error.message);\r\n        return error.message\r\n      }\r\n    },\r\n    getusers: function (filter) {\r\n      return Meteor.users\r\n        .find(filter ? filter : {}, { sort: { vpnip: 1 } })\r\n        .fetch();\r\n    },\r\n    setOnlineVPN: function (id, datachange) {\r\n      return Meteor.users.update(id, { $set: datachange });\r\n    },\r\n    addUser: function (user) {\r\n      try {\r\n        let id = Accounts.createUser(user);\r\n        return id ? \"Usuario agregado correctamente!!!\" : \"\";\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    },\r\n    sendemail: function (user, text, subject) {\r\n      let admin = Meteor.users.findOne({\r\n        _id: user.bloqueadoDesbloqueadoPor,\r\n        \"profile.role\": \"admin\",\r\n      });\r\n      // let emails = (admin\r\n      //   ? (admin.emails[0]\r\n      //     ? (admin.emails[0].address\r\n      //       ? ['carlosmbinf9405@icloud.com', admin.emails[0].address]\r\n      //       : ['carlosmbinf9405@icloud.com'])\r\n      //     : ['carlosmbinf9405@icloud.com']\r\n      //   )\r\n      //   : ['carlosmbinf9405@icloud.com'])\r\n      let emails =\r\n        admin &&\r\n          admin.emails[0] &&\r\n          admin.emails[0].address != \"carlosmbinf@gmail.com\"\r\n          ? user.emails[0] && user.emails[0].address\r\n            ? [\r\n              \"carlosmbinf@gmail.com\",\r\n              admin.emails[0].address,\r\n              user.emails[0].address,\r\n            ]\r\n            : [\"carlosmbinf@gmail.com\", admin.emails[0].address]\r\n          : user.emails[0] &&\r\n            user.emails[0].address &&\r\n            user.emails[0].address != \"carlosmbinf@gmail.com\"\r\n            ? [\"carlosmbinf@gmail.com\", user.emails[0].address]\r\n            : [\"carlosmbinf@gmail.com\"];\r\n      require(\"gmail-send\")({\r\n        user: \"carlosmbinf@gmail.com\",\r\n        pass: \"Lastunas@123\",\r\n        to: emails,\r\n        subject: subject,\r\n      })(text, (error, result, fullResult) => {\r\n        if (error) console.error(error);\r\n        // console.log(result);\r\n        console.log(fullResult);\r\n      });\r\n    },\r\n    sendMensaje: function (user, text, subject) {\r\n      MensajesCollection.insert({\r\n        from: user.bloqueadoDesbloqueadoPor\r\n          ? user.bloqueadoDesbloqueadoPor\r\n          : Meteor.users.findOne({ username: Array(Meteor.settings.public.administradores)[0][0] })._id,\r\n        to: user._id,\r\n        mensaje: text.text,\r\n      });\r\n      // console.log(text);\r\n    },\r\n\r\n    insertPelis: async function (pelicula) {\r\n      // console.log(req)\r\n      // console.log(peli)\r\n      //  const insertPeli = async () => {\r\n      let exist = await PelisCollection.findOne({ urlPeli: pelicula.peli });\r\n      let id = exist\r\n        ? exist._id\r\n        : await PelisCollection.insert({\r\n          nombrePeli: pelicula.nombre,\r\n          urlPeli: pelicula.peli,\r\n          urlBackground: pelicula.poster,\r\n          descripcion: pelicula.nombre,\r\n          tamano: 797,\r\n          mostrar: true,\r\n          subtitulo: pelicula.subtitle,\r\n          year: pelicula.year,\r\n        });\r\n      let peli = await PelisCollection.findOne({ _id: id });\r\n      // console.log(peli);\r\n      try {\r\n        var srt2vtt = await require(\"srt-to-vtt\");\r\n        var fs = await require(\"fs\");\r\n        var appRoot = await require(\"app-root-path\");\r\n        var subtituloFile =\r\n          appRoot.path + \"/public/videos/subtitulo/\" + id + \".vtt\";\r\n        const https = await require(\"https\");\r\n\r\n        // !fs.existsSync(appRoot.path + \"/public/videos/subtitulo\")\r\n        //   ? fs.mkdirSync(appRoot.path + \"/public/videos/subtitulo/\")\r\n        //   : \"\";\r\n\r\n        // const file = fs.createWriteStream(subtituloFile);\r\n        // /////////////////////////////////////////////\r\n        peli &&\r\n          peli.subtitulo &&\r\n          (await https.get(peli.subtitulo, async (response) => {\r\n            try {\r\n              var stream = response.pipe(srt2vtt());\r\n              // stream.on(\"finish\", function () {});\r\n              streamToString(stream).then((data) => {\r\n                data &&\r\n                  PelisCollection.update(\r\n                    { _id: id },\r\n                    {\r\n                      $set: {\r\n                        textSubtitle: data.toString(\"utf8\"),\r\n                      },\r\n                    },\r\n                    { multi: true }\r\n                  );\r\n                console.log(\r\n                  `Actualizado subtitulo de la Peli: ${peli.nombrePeli}`\r\n                );\r\n              });\r\n            } catch (error) {\r\n              console.log(error.message);\r\n            }\r\n          }));\r\n\r\n        const imdbId = require(\"imdb-id\");\r\n        const IMDb = require(\"imdb-light\");\r\n\r\n        let idimdb = await imdbId(peli.nombrePeli);\r\n        // console.log(\"ID de IMDB => \" + idimdb)\r\n\r\n        PelisCollection.update(\r\n          { _id: id },\r\n          {\r\n            $set: {\r\n              idimdb: idimdb,\r\n            },\r\n          },\r\n          { multi: true }\r\n        );\r\n\r\n        await IMDb.trailer(idimdb, (url) => {\r\n          // console.log(url)  // output is direct mp4 url (also have expiration timeout)\r\n\r\n          PelisCollection.update(\r\n            { _id: id },\r\n            {\r\n              $set: {\r\n                urlTrailer: url,\r\n                // clasificacion: details.Genres.split(\", \")\r\n              },\r\n            }\r\n          );\r\n        });\r\n\r\n        await IMDb.fetch(idimdb, (details) => {\r\n          // console.log(details)  // etc...\r\n          PelisCollection.update(\r\n            { _id: id },\r\n            {\r\n              $set: {\r\n                descripcion: details.Plot,\r\n                clasificacion: details.Genres.split(\", \"),\r\n              },\r\n            },\r\n            { multi: true }\r\n          );\r\n        });\r\n\r\n        return {\r\n          message: exist\r\n            ? `Actualizada la Pelicula: ${exist.nombrePeli}`\r\n            : \"Se InsertÃ³ Correctamente la PelÃ­cula\",\r\n        };\r\n      } catch (error) {\r\n        console.log(\"--------------------------------------\");\r\n        // console.log(\"error.error :> \" + error.error);\r\n        // console.log(\"error.reason :> \" + error.reason);\r\n        console.log(`error.message :> ${error.message}\\n\r\n              error.reason :> ${error.reason}`);\r\n        // console.log(\"error.errorType :> \" + error.errorType);\r\n        console.log(\"--------------------------------------\");\r\n\r\n        return {\r\n          reason: error.reason,\r\n          message: error.message,\r\n          errorType: error.type,\r\n        };\r\n      }\r\n    },\r\n    getListadosPreciosOficiales: async () => {\r\n\r\n      try {\r\n        // let userAdmin = await Meteor.call('getAdminPrincipal');\r\n        return await PreciosCollection.find({}).fetch()\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    getAdminPrincipal: async () => {\r\n\r\n      ///////REVISAR EN ADDVENTASONLY  el descuento que se debe de hacer\r\n      // let admin = await Meteor.users.findOne(adminId)\r\n      // let precio = PreciosCollection.findOne(precioid)\r\n\r\n\r\n      try {\r\n        let adminPrincipal = await Meteor.users.findOne({ username: Meteor.settings.public.administradores[0] })\r\n        return adminPrincipal ? adminPrincipal : null\r\n      } catch (error) {\r\n        return error.message\r\n      }\r\n\r\n\r\n    },\r\n    getPrecioOficial: async (compra) => {\r\n\r\n      try {\r\n        let adminPrincipal = await Meteor.users.findOne({ username: Meteor.settings.public.administradores[0] })\r\n\r\n        let precioOficial = await PreciosCollection.findOne({\r\n          userId: adminPrincipal._id,\r\n          type: compra.type,\r\n          megas: compra.megas\r\n        })\r\n\r\n        return precioOficial ? precioOficial : null\r\n      } catch (error) {\r\n        return error.message\r\n      }\r\n\r\n\r\n    },\r\n    addVentasOnly: async (userChangeid, adminId, compra) => {\r\n\r\n      ///////REVISAR EN ADDVENTASONLY  el descuento que se debe de hacer\r\n      let userChange = await Meteor.users.findOne(userChangeid)\r\n      // let admin = await Meteor.users.findOne(adminId)\r\n      // let precio = PreciosCollection.findOne(precioid)\r\n      let adminPrincipal = await Meteor.users.findOne({ username: Meteor.settings.public.administradores[0] })\r\n\r\n      let precioOficial = await Meteor.call('getPrecioOficial', compra);\r\n\r\n      try {\r\n\r\n        compra && await VentasCollection.insert({\r\n          adminId: adminId,\r\n          userId: userChangeid,\r\n          precio: precioOficial ? precioOficial.precio : compra.precio,\r\n          gananciasAdmin: precioOficial ? compra.precio - precioOficial.precio : 0,\r\n          comentario: compra.comentario\r\n        })\r\n\r\n        return compra ? compra.comentario : `No se encontro Precio a la oferta establecida en el usuario: ${userChange.username}`\r\n      } catch (error) {\r\n        return error.message\r\n      }\r\n\r\n\r\n    },\r\n    addVentasProxy: async (userChangeid, userId) => {\r\n      let userChange = await Meteor.users.findOne(userChangeid)\r\n      let user = await Meteor.users.findOne(userId)\r\n      // let precio = PreciosCollection.findOne(precioid)\r\n      let precio;\r\n\r\n      await userChange.isIlimitado\r\n        ? precio = await PreciosCollection.findOne({ userId: userId, type: \"fecha-proxy\" })\r\n        : precio = await PreciosCollection.findOne({ userId: userId, type: \"megas\", megas: userChange.megas })\r\n\r\n\r\n      try {\r\n        if (!userChange.baneado) {\r\n          await Meteor.call(\"desabilitarProxyUser\", userChangeid, userId)\r\n          return null\r\n        } else if (precio || Array(Meteor.settings.public.administradores)[0].includes(user.username)) {\r\n          await Meteor.call(\"habilitarProxyUser\", userChangeid, userId)\r\n          precio && await Meteor.call(\"addVentasOnly\", userChangeid, userId, precio)\r\n\r\n          //   await VentasCollection.insert({\r\n          //   adminId: userId,\r\n          //   userId: userChangeid,\r\n          //   precio: (precio.precio - user.descuentoproxy > 0) ? (precio.precio - user.descuentoproxy) : 0,\r\n          //   comentario: precio.comentario\r\n          // })\r\n\r\n        }\r\n\r\n        return precio ? precio.comentario : `No se encontro Precio a la oferta de Proxy del usuario: ${userChange.username}`\r\n      } catch (error) {\r\n        return error.message\r\n      }\r\n\r\n\r\n    },\r\n    desabilitarProxyUser: async (userChangeid, userId) => {\r\n\r\n      let userChange = await Meteor.users.findOne(userChangeid)\r\n      let user = await Meteor.users.findOne(userId)\r\n\r\n      let baneado = userChange.baneado\r\n\r\n      !baneado&&\r\n      await Meteor.users.update(userChangeid, {\r\n        $set: {\r\n          baneado: true,\r\n          bloqueadoDesbloqueadoPor: userId\r\n        },\r\n      })\r\n\r\n      !baneado&&\r\n      await LogsCollection.insert({\r\n        type: \"Proxy\",\r\n        userAfectado: userChangeid,\r\n        userAdmin: userId,\r\n        message:\r\n          \"Ha sido Desactivado el proxy por un Admin\"\r\n      })\r\n      \r\n      // Meteor.call('sendemail', userChange, {\r\n      //   text: \"Ha sido \" +\r\n      //     (!userChange.baneado ? \"Desactivado\" : \"Activado\") +\r\n      //     ` el proxy del usuario ${userChange.username}`\r\n      // },\r\n      //  (!userChange.baneado ? \"Desactivado \" + user.username : \"Activado \" + user.username)),\r\n\r\n      !baneado&&\r\n      await Meteor.call('sendMensaje', userChange, {\r\n        text: \"Ha sido Desactivado el proxy\"\r\n      }, (\"Desactivado \" + user.username))\r\n\r\n    },\r\n    habilitarProxyUser: async (userChangeid, userId) => {\r\n\r\n      let userChange = await Meteor.users.findOne(userChangeid)\r\n      let user = await Meteor.users.findOne(userId)\r\n      console.log(userChange);\r\n      let baneado = userChange.baneado\r\n      baneado &&\r\n      await Meteor.users.update(userChangeid, {\r\n        $set: {\r\n          baneado: false,\r\n          bloqueadoDesbloqueadoPor: userId\r\n        },\r\n      })\r\n\r\n      baneado &&\r\n      await LogsCollection.insert({\r\n        type: \"Proxy\",\r\n        userAfectado: userChangeid,\r\n        userAdmin: userId,\r\n        message: \"Ha sido Activado el proxy por un Admin\"\r\n      })\r\n      // Meteor.call('sendemail', userChange, {\r\n      //   text: \"Ha sido \" +\r\n      //     (!userChange.baneado ? \"Desactivado\" : \"Activado\") +\r\n      //     ` el proxy del usuario ${userChange.username}`\r\n      // }, (!userChange.baneado ? \"Desactivado \" + user.username : \"Activado \" + user.username)),\r\n\r\n      baneado &&\r\n      await Meteor.call('sendMensaje', userChange, {\r\n        text: \"Ha sido \" +\r\n          (!userChange.baneado ? \"Desactivado\" : \"Activado\") +\r\n          ` el proxy`\r\n      }, (!userChange.baneado ? \"Desactivado \" + user.username : \"Activado \" + user.username))\r\n\r\n    },\r\n    habilitarProxyUserinVentas: async (userUsername, adminusername) => {\r\n\r\n      let userChange = await Meteor.users.findOne({ username: userUsername })\r\n      let admin = await Meteor.users.findOne({username:adminusername})\r\n      let baneado = userChange.baneado\r\n      baneado &&\r\n      await Meteor.users.update(userChange._id, {\r\n        $set: {\r\n          baneado: false,\r\n          bloqueadoDesbloqueadoPor: admin._id\r\n        },\r\n      })\r\n\r\n      baneado &&\r\n      await LogsCollection.insert({\r\n        type: \"Proxy\",\r\n        userAfectado: userChange._id,\r\n        userAdmin: admin._id,\r\n        message: \"Ha sido Activado el proxy por un Admin\"\r\n      })\r\n      // Meteor.call('sendemail', userChange, {\r\n      //   text: \"Ha sido \" +\r\n      //     (!userChange.baneado ? \"Desactivado\" : \"Activado\") +\r\n      //     ` el proxy del usuario ${userChange.username}`\r\n      // }, (!userChange.baneado ? \"Desactivado \" + user.username : \"Activado \" + user.username)),\r\n\r\n      baneado &&\r\n      await Meteor.call('sendMensaje', userChange, {\r\n        text: \"Ha sido \" +\r\n          (!userChange.baneado ? \"Desactivado\" : \"Activado\") +\r\n          ` el proxy`\r\n      }, (!userChange.baneado ? \"Desactivado \" + admin.username : \"Activado \" + admin.username))\r\n\r\n    },\r\n    desabilitarProxyUserinVentas: async (userUsername, adminusername) => {\r\n\r\n      let userChange = await Meteor.users.findOne({ username: userUsername })\r\n      let admin = await Meteor.users.findOne({username:adminusername})\r\n      let baneado = userChange.baneado\r\n      !baneado &&\r\n      await Meteor.users.update(userChange._id, {\r\n        $set: {\r\n          baneado: true,\r\n          bloqueadoDesbloqueadoPor: admin._id\r\n        },\r\n      })\r\n\r\n      !baneado &&\r\n      await LogsCollection.insert({\r\n        type: \"Proxy\",\r\n        userAfectado: userChange._id,\r\n        userAdmin: admin._id,\r\n        message: \"Ha sido Desactivado el proxy por un Admin\"\r\n      })\r\n      // Meteor.call('sendemail', userChange, {\r\n      //   text: \"Ha sido \" +\r\n      //     (!userChange.baneado ? \"Desactivado\" : \"Activado\") +\r\n      //     ` el proxy del usuario ${userChange.username}`\r\n      // }, (!userChange.baneado ? \"Desactivado \" + user.username : \"Activado \" + user.username)),\r\n\r\n      !baneado &&\r\n      await Meteor.call('sendMensaje', userChange, {\r\n        text: \"Ha sido \" +\r\n          (!userChange.baneado ? \"Desactivado\" : \"Activado\") +\r\n          ` el proxy`\r\n      }, (!userChange.baneado ? \"Desactivado \" + admin.username : \"Activado \" + admin.username))\r\n\r\n    },\r\n    addVentasVPN: async (userChangeid, userId) => {\r\n      let userChange = await Meteor.users.findOne(userChangeid)\r\n      let user = await Meteor.users.findOne(userId)\r\n      // let precio = PreciosCollection.findOne(precioid)\r\n      let precio;\r\n\r\n      await userChange.vpnisIlimitado\r\n        ? precio = await PreciosCollection.findOne({ userId: userId, type: \"fecha-vpn\" })\r\n        : (userChange.vpnplus\r\n          ? precio = await PreciosCollection.findOne({ userId: userId, type: \"vpnplus\", megas: userChange.vpnmegas })\r\n          : precio = await PreciosCollection.findOne({ userId: userId, type: \"vpn2mb\", megas: userChange.vpnmegas })\r\n        )\r\n\r\n      try {\r\n        if (userChange.vpn) {\r\n          await Meteor.call(\"desabilitarVPNUser\", userChangeid, userId)\r\n          return null\r\n        } else if (precio || Array(Meteor.settings.public.administradores)[0].includes(user.username)) {\r\n          await Meteor.call(\"habilitarVPNUser\", userChangeid, userId)\r\n\r\n          precio && await Meteor.call(\"addVentasOnly\", userChangeid, userId, precio)\r\n          // VentasCollection.insert({\r\n          //   adminId: userId,\r\n          //   userId: userChangeid,\r\n          //   precio: (precio.precio - user.descuentovpn > 0) ? (precio.precio - user.descuentovpn) : 0,\r\n          //   comentario: precio.comentario\r\n          // })\r\n\r\n        }\r\n\r\n        return precio ? precio.comentario : `No se encontro Precio a la oferta de VPN del usuario: ${userChange.username}`\r\n\r\n      } catch (error) {\r\n        return error.message\r\n      }\r\n\r\n    },\r\n    desabilitarVPNUser: async (userChangeid, userId) => {\r\n\r\n      let userChange = await Meteor.users.findOne(userChangeid)\r\n      let user = await Meteor.users.findOne(userId)\r\n\r\n\r\n      await Meteor.users.update(userChangeid, {\r\n        $set: {\r\n          vpn: false,\r\n          bloqueadoDesbloqueadoPor: userId\r\n        },\r\n      })\r\n      LogsCollection.insert({\r\n        type: 'VPN',\r\n        userAfectado: userChangeid,\r\n        userAdmin: userId,\r\n        message:\r\n          `Se DesactivÃ³ la VPN`\r\n      });\r\n      // Meteor.call('sendemail', userChange, {\r\n      //   text: \"Ha sido \" +\r\n      //     (!userChange.baneado ? \"Desactivado\" : \"Activado\") +\r\n      //     ` el proxy del usuario ${userChange.username}`\r\n      // },\r\n      //  (!userChange.baneado ? \"Desactivado \" + user.username : \"Activado \" + user.username)),\r\n      await Meteor.call('sendMensaje', userChange, {\r\n        text: \"Ha sido Desactivado el proxy\"\r\n      }, (\"Desactivado \" + user.username))\r\n\r\n\r\n    },\r\n    habilitarVPNUser: async (userChangeid, userId) => {\r\n\r\n      let userChange = await Meteor.users.findOne(userChangeid)\r\n      let user = await Meteor.users.findOne(userId)\r\n\r\n\r\n\r\n\r\n      if (userChange.vpn || userChange.vpnplus || userChange.vpn2mb) {\r\n\r\n\r\n        let nextIp = Meteor.users.findOne({}, { sort: { vpnip: -1 } }) ? Meteor.users.findOne({}, { sort: { vpnip: -1 } }).vpnip : 1\r\n\r\n        !userChange.vpnip &&\r\n          Meteor.users.update(userChangeid, {\r\n            $set: {\r\n              vpnip: nextIp + 1\r\n            },\r\n          })\r\n        Meteor.users.update(userChangeid, {\r\n          $set: {\r\n            vpn: true\r\n          },\r\n        });\r\n        LogsCollection.insert({\r\n          type: 'VPN',\r\n          userAfectado: userChangeid,\r\n          userAdmin: userId,\r\n          message:\r\n            `Se Activo la VPN`\r\n        });\r\n        // Meteor.call('sendemail', users, { text: `Se ${!users.vpn ? \"Activo\" : \"DesactivÃ³\"} la VPN para el usuario: ${users.username}${users.descuentovpn ? ` Con un descuento de: ${users.descuentovpn}CUP` : \"\"}` }, `VPN ${user.username}`)\r\n        Meteor.call('sendMensaje', userChange, { text: `Se ${!userChange.vpn ? \"Activo\" : \"DesactivÃ³\"} la VPN` }, `VPN ${user.username}`)\r\n\r\n      }\r\n      else {\r\n        setMensaje(\"INFO!!!\\nPrimeramente debe seleccionar una oferta de VPN!!!\"),\r\n          handleClickOpen()\r\n        // alert(\"INFO!!!\\nPrimeramente debe seleccionar una oferta de VPN!!!\")\r\n      }\r\n\r\n    }, setConsumoProxy: async (user, status) => {\r\n      try {\r\n        let count = await Meteor.users.update(\r\n          user ? user : {},\r\n          {\r\n            $set: { contandoProxy: status },\r\n          },\r\n          { multi: true }\r\n        );\r\n        return `Se actualizaron ${count} usuarios`\r\n      } catch (error) {\r\n        return error.message\r\n      }\r\n    }, getUrlTriller: (id) => {\r\n      let peli = PelisCollection.findOne(id)\r\n      return peli.urlTrailer ? peli.urlTrailer : null;\r\n    }\r\n\r\n  });\r\n\r\n}","import { Meteor } from \"meteor/meteor\";\r\nimport {\r\n    OnlineCollection,\r\n    PelisCollection,\r\n    MensajesCollection,\r\n    ServersCollection,\r\n    PreciosCollection,\r\n    VentasCollection,\r\n    FilesCollection,\r\n    VersionsCollection,\r\n    LogsCollection,\r\n    DescargasCollection,\r\n    TVCollection,\r\n    RegisterDataUsersCollection\r\n  } from \"../imports/ui/pages/collections/collections\";\r\n\r\nif (Meteor.isServer) {\r\n    console.log(\"Cargando Publicaciones...\");\r\n\r\n\r\n    Meteor.publish(\"logs\", function (selector,option) {\r\n        return LogsCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"logsId\", function (id) {\r\n        return LogsCollection.find({ userAfectado: id });\r\n      });\r\n      Meteor.publish(\"registerDataUser\", function (selector,option) {\r\n        return RegisterDataUsersCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"registerDataUserId\", function (id) {\r\n        return RegisterDataUsersCollection.find({ userId: id });\r\n      });\r\n      Meteor.publish(\"pelis\", function (selector,option) {\r\n        return PelisCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"peli\", function (id) {\r\n        return PelisCollection.find({ _id: id });\r\n      });\r\n      Meteor.publish(\"tvs\", function (selector,option) {\r\n        return TVCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"tv\", function (id) {\r\n        return TVCollection.find({ _id: id });\r\n      });\r\n      Meteor.publish(\"descargas\", function (selector,option) {\r\n        return DescargasCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"descarga\", function (id) {\r\n        return DescargasCollection.find({ _id: id });\r\n      });\r\n      Meteor.publish(\"user\", function (selector,option) {\r\n        return Meteor.users.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"userID\", function (id) {\r\n        return Meteor.users.find({ _id: id });\r\n      });\r\n      Meteor.publish(\"userRole\", function (role) {\r\n        return Meteor.users.find({ \"profile.role\": role });\r\n      });\r\n      Meteor.publish(\"conexionesUser\", function (id) {\r\n        return OnlineCollection.find({ userId: id });\r\n      });\r\n      Meteor.publish(\"conexiones\", function (selector,option) {\r\n        return OnlineCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"mensajes\", function (selector,option) {\r\n        return MensajesCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"server\", function (id) {\r\n        return ServersCollection.find(id);\r\n      });\r\n      Meteor.publish(\"servers\", function (selector,option) {\r\n        return ServersCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"precios\", function (selector,option) {\r\n        return PreciosCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"ventas\", function (selector,option) {\r\n        return VentasCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"files\", function (selector,option) {\r\n        return FilesCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n      Meteor.publish(\"versions\", function (selector,option) {\r\n        return VersionsCollection.find(selector?selector:{},option?option:{});\r\n      });\r\n}","import { Meteor } from \"meteor/meteor\";\r\nimport { Accounts } from 'meteor/accounts-base'\r\n\r\nimport bodyParser from \"body-parser\";\r\nimport { WebApp } from \"meteor/webapp\";\r\nimport router from \"router\";\r\nconst endpoint = router();\r\n\r\n// import youtubeDownload from \"./downloader\";\r\n\r\nvar http = require(\"http\");\r\nhttp.post = require(\"http-post\");\r\n\r\nimport {\r\n    OnlineCollection,\r\n    PelisCollection,\r\n    MensajesCollection,\r\n    ServersCollection,\r\n    PreciosCollection,\r\n    VentasCollection,\r\n    FilesCollection,\r\n    VersionsCollection,\r\n    LogsCollection,\r\n    DescargasCollection,\r\n    TVCollection,\r\n    RegisterDataUsersCollection\r\n  } from \"../imports/ui/pages/collections/collections\";\r\n\r\n  \r\nconst got = require('got')\r\nconst htmlUrls = require('html-urls')\r\n\r\nif (Meteor.isServer) {\r\n\r\n    console.log(\"Cargando Rutas...\");\r\n    var conteoPost = 0;\r\n    function streamToString(stream) {\r\n        const chunks = [];\r\n        return new Promise((resolve, reject) => {\r\n            stream.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\r\n            stream.on('error', (err) => reject(err));\r\n            stream.on('end', () => resolve(Buffer.concat(chunks).toString('utf8')));\r\n        })\r\n    }\r\n\r\n    async function getPeli(nombre, year, url) {\r\n        let peli = ''\r\n        let subtitle = ''\r\n        let poster = ''\r\n        if (!url)\r\n            throw new TypeError(\"Need to provide an url as first argument.\");\r\n        const { body: html } = await got(url);\r\n        const linksPeli = htmlUrls({ html, url });\r\n\r\n        // for (var j = 5; j < linksPeli.length-6; j++) {\r\n        //   // console.log(`Links de peliculas ${JSON.stringify(linksPeli[j])}`);\r\n        // }\r\n        var filter = require('simple-text-search')\r\n        var get = filter(linksPeli, 'url')\r\n        var peliurl = get('.mkv') ? get('.mkv') : get('.mp4')\r\n        var subtitleurl = get('.srt')\r\n        var posterurl = get('.jpg') ? get('.jpg') : get('.png')\r\n\r\n        peli = peliurl[0] && peliurl[0].url;\r\n        subtitle = subtitleurl[0] && subtitleurl[0].url;\r\n        poster = posterurl[0] && posterurl[0].url;\r\n\r\n        const insertPeli = peli && { nombre, year, peli, subtitle, poster }\r\n        return insertPeli\r\n    };\r\n\r\n    ////////////////////////INSERTAR PELICUALAS PASANDOLE EL AÃ‘O////////////\r\n    endpoint.post(\"/insertpelisbyyears\", (req, res) => {\r\n        //console.log(req.body)\r\n\r\n        var year = req.body.year;\r\n        var pelis = [];\r\n        (async () => {\r\n            const url = `https://visuales.uclv.cu/Peliculas/Extranjeras/${year}/`\r\n            if (!url) throw new TypeError('Need to provide an url as first argument.')\r\n            const { body: html } = await got(url)\r\n            const links = await htmlUrls({ html, url })\r\n\r\n            //   links.forEach(({ url }) => console.log(url))\r\n\r\n            //   // => [\r\n            //   //   'https://microlink.io/component---src-layouts-index-js-86b5f94dfa48cb04ae41.js',\r\n            //   //   'https://microlink.io/component---src-pages-index-js-a302027ab59365471b7d.js',\r\n            //   //   'https://microlink.io/path---index-709b6cf5b986a710cc3a.js',\r\n            //   //   'https://microlink.io/app-8b4269e1fadd08e6ea1e.js',\r\n            //   //   'https://microlink.io/commons-8b286eac293678e1c98c.js',\r\n            //   //   'https://microlink.io',\r\n            //   //   ...\r\n            //   // ]\r\n\r\n\r\n            for (var i = 5; i <= links.length - 4; i++) {\r\n                let nombre = links[i].value\r\n                    .replace(`${year}_`, \"\")\r\n                    .replace(`%20`, \" \")\r\n                    .replace(/\\./g, \" \")\r\n                    .replace(`/`, \"\");\r\n                // console.log(`Name: ${nombre}`);\r\n                // console.log(links[i]);\r\n                let a = await getPeli(nombre, year, links[i].url)\r\n                a && (a.nombre && a.year && a.peli && a.poster) && pelis.push(a);\r\n                console.log(`Name: ${nombre}`);\r\n\r\n\r\n            }\r\n            // console.log(pelis);\r\n            // console.log(pelis.length)\r\n            try {\r\n                pelis &&\r\n                    pelis.forEach( (element) => {\r\n// console.log(element);\r\n                       Meteor.call(\"insertPelis\",element)\r\n\r\n                        // http.post(\"http://localhost:6000/insertPelis\", element, (opciones, res, body) => {\r\n                        //     if (!opciones.headers.error) {\r\n                        //         // console.log(`statusCode: ${res.statusCode}`);\r\n                        //         console.log(element.nombre + \" => Todo OK \");\r\n\r\n                        //         return;\r\n                        //     } else {\r\n                        //         console.log(element.nombre + \" => Error: \" + JSON.stringify(opciones.headers));\r\n\r\n                        //         return;\r\n                        //     }\r\n                        // });\r\n\r\n                    });\r\n            } catch (error) {\r\n                console.log(\"Ocurrio un error => \" + error.message);\r\n            }\r\n        })()\r\n\r\n\r\n\r\n        // res.writeHead(200, {\r\n        //   message: \"todo OK\",\r\n        // });\r\n        // res.end(\"todo OK\")\r\n    });\r\n    endpoint.get(\"/getsubtitle\", (req, res) => {\r\n        // console.log(req)\r\n        // console.log(req.query.idPeli)\r\n        // res.setHeader('Content-Type', 'text/plain; charset=utf-8')\r\n\r\n        //   res.end(req.query.idPeli);\r\n\r\n        let id = req.query.idPeli;\r\n        let pelisubtitle = PelisCollection.findOne(req.query.idPeli);\r\n        res.setHeader('Content-Type', 'text/plain; charset=utf-8')\r\n        res.end(pelisubtitle ? pelisubtitle.textSubtitle : \"\");\r\n\r\n    });\r\n\r\n\r\n    endpoint.post(\"/convertsrttovtt\", async (req, res) => {\r\n        // console.log(req)\r\n        // console.log(req.body)\r\n        let id = req.body.idPeli;\r\n        let peli = await PelisCollection.findOne({ _id: id });\r\n\r\n        try {\r\n            var srt2vtt = await require(\"srt-to-vtt\");\r\n            var fs = await require(\"fs\");\r\n            var appRoot = await require(\"app-root-path\");\r\n            var subtituloFile =\r\n                appRoot.path + \"/public/videos/subtitulo/\" + id + \".vtt\";\r\n            const https = await require(\"https\");\r\n            // !fs.existsSync(appRoot.path + \"/public/videos/subtitulo\")\r\n            //   ? fs.mkdirSync(appRoot.path + \"/public/videos/subtitulo/\")\r\n            //   : \"\";\r\n\r\n\r\n            // const file = fs.createWriteStream(subtituloFile);\r\n            // /////////////////////////////////////////////\r\n            peli && peli.subtitulo && await https.get(peli.subtitulo, async (response) => {\r\n\r\n                var stream = response.pipe(srt2vtt());\r\n                // stream.on(\"finish\", function () {});\r\n                streamToString(stream).then(data => {\r\n                    data && PelisCollection.update(\r\n                        { _id: id },\r\n                        {\r\n                            $set: {\r\n                                textSubtitle: data.toString(\"utf8\"),\r\n                            },\r\n                        },\r\n                        { multi: true }\r\n                    );\r\n                    console.log(`Actualizado subtitulo de la Peli: ${peli.nombrePeli}`);\r\n                }\r\n                )\r\n\r\n            });\r\n\r\n            res.writeHead(200, {\r\n                message: \"todo OK\",\r\n            });\r\n            res.end();\r\n        } catch (error) {\r\n            console.log(\"--------------------------------------\");\r\n            // console.log(\"error.error :> \" + error.error);\r\n            // console.log(\"error.reason :> \" + error.reason);\r\n            console.log(\"error.message :> \" + error.message);\r\n            // console.log(\"error.errorType :> \" + error.errorType);\r\n            console.log(\"--------------------------------------\");\r\n\r\n            // res.writeHead(error.error, {\r\n            //   error: error.error,\r\n            //   reason: error.reason,\r\n            //   message: error.message,\r\n            //   errorType: error.errorType,\r\n            // });\r\n            res.writeHead(200, {\r\n                message: \"Error:\\n\" + error.message,\r\n            });\r\n            res.end();\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n    endpoint.post(\"/insertPelis\", async (req, res) => {\r\n        // console.log(req)\r\n        // console.log(req.body)\r\n        //  const insertPeli = async () => {\r\n        let exist = await PelisCollection.findOne({ urlPeli: req.body.peli })\r\n        let id = exist ? exist._id : await PelisCollection.insert({\r\n            nombrePeli: req.body.nombre,\r\n            urlPeli: req.body.peli,\r\n            urlBackground: req.body.poster,\r\n            descripcion: req.body.nombre,\r\n            tamano: 797,\r\n            mostrar: true,\r\n            subtitulo: req.body.subtitle,\r\n            year: req.body.year\r\n        });\r\n        let peli = await PelisCollection.findOne({ _id: id });\r\n        // console.log(peli);\r\n        try {\r\n            var srt2vtt = await require(\"srt-to-vtt\");\r\n            var fs = await require(\"fs\");\r\n            var appRoot = await require(\"app-root-path\");\r\n            var subtituloFile =\r\n                appRoot.path + \"/public/videos/subtitulo/\" + id + \".vtt\";\r\n            const https = await require(\"https\");\r\n\r\n            // !fs.existsSync(appRoot.path + \"/public/videos/subtitulo\")\r\n            //   ? fs.mkdirSync(appRoot.path + \"/public/videos/subtitulo/\")\r\n            //   : \"\";\r\n\r\n\r\n            // const file = fs.createWriteStream(subtituloFile);\r\n            // /////////////////////////////////////////////\r\n            peli && peli.subtitulo && await https.get(peli.subtitulo, async (response) => {\r\n                try {\r\n                    var stream = response.pipe(srt2vtt());\r\n                    // stream.on(\"finish\", function () {});\r\n                    streamToString(stream).then(data => {\r\n                        data && PelisCollection.update(\r\n                            { _id: id },\r\n                            {\r\n                                $set: {\r\n                                    textSubtitle: data.toString(\"utf8\"),\r\n                                },\r\n                            },\r\n                            { multi: true }\r\n                        );\r\n                        console.log(`Actualizado subtitulo de la Peli: ${peli.nombrePeli}`);\r\n                    }\r\n                    )\r\n                } catch (error) {\r\n                    console.log(error.message)\r\n                }\r\n\r\n\r\n            });\r\n\r\n            const imdbId = require('imdb-id');\r\n            const IMDb = require('imdb-light');\r\n\r\n            let idimdb = await imdbId(peli.nombrePeli)\r\n            // console.log(\"ID de IMDB => \" + idimdb)\r\n\r\n            PelisCollection.update(\r\n                { _id: id },\r\n                {\r\n                    $set: {\r\n                        idimdb: idimdb\r\n                    },\r\n                },\r\n                { multi: true }\r\n            );\r\n\r\n            await IMDb.trailer(idimdb, (url) => {\r\n                // console.log(url)  // output is direct mp4 url (also have expiration timeout)\r\n\r\n                PelisCollection.update(\r\n                    { _id: id },\r\n                    {\r\n                        $set: {\r\n                            urlTrailer: url,\r\n                            // clasificacion: details.Genres.split(\", \")\r\n                        },\r\n                    }\r\n                );\r\n            })\r\n\r\n            await IMDb.fetch(idimdb, (details) => {\r\n                // console.log(details)  // etc...\r\n                PelisCollection.update(\r\n                    { _id: id },\r\n                    {\r\n                        $set: {\r\n                            descripcion: details.Plot,\r\n                            clasificacion: details.Genres.split(\", \")\r\n                        },\r\n                    },\r\n                    { multi: true }\r\n                );\r\n            })\r\n\r\n\r\n\r\n            res.writeHead(200, {\r\n                message: \"todo OK\",\r\n            });\r\n        } catch (error) {\r\n            console.log(\"--------------------------------------\");\r\n            // console.log(\"error.error :> \" + error.error);\r\n            // console.log(\"error.reason :> \" + error.reason);\r\n            console.log(`error.message :> ${error.message}\\n\r\n            error.reason :> ${error.reason}`);\r\n            // console.log(\"error.errorType :> \" + error.errorType);\r\n            console.log(\"--------------------------------------\");\r\n\r\n            res.writeHead(200, {\r\n                reason: error.reason,\r\n                message: error.message,\r\n                errorType: error.type,\r\n            });\r\n        }\r\n\r\n        res.end();\r\n        // }\r\n\r\n        // PelisCollection.find({urlPeli:req.body.peli}).count() == 0 && await insertPeli()\r\n\r\n    });\r\n\r\n\r\n    endpoint.post(\"/getUsersVPN\", async (req, res) => {\r\n        // console.log(req)\r\n        // console.log(req.body)\r\n        try {\r\n            let usuarios = []\r\n            let result = \"\"\r\n            await Meteor.users.find({ vpn: true }).forEach((user, index) => {\r\n                usuarios.push({\r\n                    username: user.username,\r\n                    pass: user.passvpn,\r\n                    ip: `192.168.18.${index}`\r\n                })\r\n\r\n            })\r\n            result = usuarios.forEach(u => `${result}${u.username} l2tpd ${u.pass} ${u.ip}\\n`)\r\n            await console.log(\"Result: \" + JSON.stringify(result));\r\n\r\n            res.end(result);\r\n\r\n\r\n        } catch (error) {\r\n            console.log(\"error.error :> \" + error.error);\r\n            console.log(\"error.reason :> \" + error.reason);\r\n            console.log(\"error.message :> \" + error.message);\r\n            console.log(\"error.errorType :> \" + error.errorType);\r\n            console.log(\"--------------------------------------\");\r\n\r\n            res.end(error);\r\n        }\r\n\r\n\r\n    });\r\n\r\n    endpoint.post(\"/getfile\", async (req, res) => {\r\n        // console.log(req)\r\n        // console.log(req.body)\r\n        try {\r\n            console.log(\"Get File \" + JSON.stringify(req.body.nombre));\r\n\r\n            await fs.readFile(req.body.url, \"utf-8\", (err, data) => {\r\n                if (err) res.end(\"Error: \" + err);\r\n                // console.log(data);\r\n\r\n                res.end(data);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(\"error.error :> \" + error.error);\r\n            console.log(\"error.reason :> \" + error.reason);\r\n            console.log(\"error.message :> \" + error.message);\r\n            console.log(\"error.errorType :> \" + error.errorType);\r\n            console.log(\"--------------------------------------\");\r\n\r\n            res.end(error);\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n    endpoint.post(\"/setfile\", async (req, res) => {\r\n        // console.log(req)\r\n        // console.log(req.body)\r\n        try {\r\n            console.log(\"Set File \" + JSON.stringify(req.body));\r\n\r\n            await fs.writeFile(req.body.url, req.body.data, (err) => {\r\n                if (err) res.end(\"Error: \" + err);\r\n                res.end(\"Datos Guardados Correctamente!!!\")\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(\"error.error :> \" + error.error);\r\n            console.log(\"error.reason :> \" + error.reason);\r\n            console.log(\"error.message :> \" + error.message);\r\n            console.log(\"error.errorType :> \" + error.errorType);\r\n            console.log(\"--------------------------------------\");\r\n\r\n            res.writeHead(error.error, {\r\n                error: error.error,\r\n                reason: error.reason,\r\n                message: error.message,\r\n                errorType: error.errorType,\r\n            });\r\n\r\n            res.end(error);\r\n\r\n        }\r\n\r\n\r\n    });\r\n\r\n    endpoint.post(\"/createuser\", (req, res) => {\r\n        // console.log(req)\r\n        // console.log(req.body)\r\n        try {\r\n            Accounts.createUser(req.body);\r\n            console.log(\"Usuario Creado\" + JSON.stringify(req.body));\r\n\r\n            res.writeHead(200, {\r\n                message: \"Usuario Creado\",\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error.error :> \" + error.error);\r\n            console.log(\"error.reason :> \" + error.reason);\r\n            console.log(\"error.message :> \" + error.message);\r\n            console.log(\"error.errorType :> \" + error.errorType);\r\n            console.log(\"--------------------------------------\");\r\n\r\n            res.writeHead(error.error, {\r\n                error: error.error,\r\n                reason: error.reason,\r\n                message: error.message,\r\n                errorType: error.errorType,\r\n            });\r\n        }\r\n\r\n        res.end();\r\n    });\r\n    endpoint.post(\"/userpass\", (req, res) => {\r\n        // console.log(req)\r\n        // console.log(req.body)\r\n        try {\r\n            req.body.username && Accounts.setUsername(req.body.id, req.body.username);\r\n\r\n            req.body.password &&\r\n                (Accounts.setPassword(req.body.id, req.body.password),\r\n                    Meteor.users.update(req.body.id, { $set: { \"passvpn\": req.body.password } }));\r\n\r\n            req.body.email &&\r\n                Meteor.users.update(req.body.id, { $set: { \"emails\": [{ address: req.body.email }] } });\r\n\r\n            req.body.movil &&\r\n                Meteor.users.update(req.body.id, { $set: { \"movil\": req.body.movil } });\r\n\r\n            console.log(\r\n                \"Usuario actualizado \" + req.body.id\r\n            );\r\n\r\n            res.writeHead(200, {\r\n                message: \"Usuario actualizado\",\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error.error :> \" + error.error);\r\n            console.log(\"error.reason :> \" + error.reason);\r\n            console.log(\"error.message :> \" + error.message);\r\n            console.log(\"error.errorType :> \" + error.errorType);\r\n            console.log(\"--------------------------------------\");\r\n\r\n            res.writeHead(error.error, {\r\n                error: error.error,\r\n                reason: error.reason,\r\n                message: error.message,\r\n                errorType: error.errorType,\r\n            });\r\n        }\r\n\r\n        res.end();\r\n    });\r\n\r\n    endpoint.post(\"/eliminar\", (req, res) => {\r\n        // console.log(req)\r\n        console.log(req.body);\r\n        let id = req.body.id;\r\n        try {\r\n            if (DescargasCollection.findOne({ idFile: id })) {\r\n                var fs = require(\"fs\");\r\n                var appRoot = require(\"app-root-path\");\r\n                var videoFile = appRoot.path + \"/public/videos/\" + id + \".mp4\";\r\n\r\n                fs.existsSync(videoFile)\r\n                    ? fs.unlinkSync(videoFile, (err) => {\r\n                        err\r\n                            ? console.error(err)\r\n                            : console.log(\"ARCHIVO \" + videoFile + \" Eliminado\");\r\n                        //file removed\r\n                    })\r\n                    : console.log(\"no existe el fichero\");\r\n\r\n                DescargasCollection.remove({ idFile: id });\r\n                //file removed\r\n                // res.writeHead(200, {\r\n                //   message: \"Eliminado el Archivo\" + req.body.idVideo,\r\n                // });\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error.error :> \" + error.error);\r\n            console.log(\"error.reason :> \" + error.reason);\r\n            console.log(\"error.message :> \" + error.message);\r\n            console.log(\"error.errorType :> \" + error.errorType);\r\n            console.log(\"--------------------------------------\");\r\n\r\n            // res.writeHead(error.error, {\r\n            //   error: error.error,\r\n            //   reason: error.reason,\r\n            //   message: error.message,\r\n            //   errorType: error.errorType,\r\n            // });\r\n        }\r\n\r\n        res.end();\r\n    });\r\n    // endpoint.post(\"/descarga\", (req, res) => {\r\n    //     const youtubedl = require(\"youtube-dl\");\r\n\r\n    //     const url = \"http://www.youtube.com/watch?v=\" + req.body.idVideo;\r\n    //     // Optional arguments passed to youtube-dl.\r\n    //     const options = [\"--username=user\", \"--password=hunter2\"];\r\n\r\n    //     if (!DescargasCollection.findOne({ idFile: req.body.idVideo })) {\r\n    //         try {\r\n    //             res.writeHead(200, {\r\n    //                 message: \"Descargando:\" + req.body.idVideo,\r\n    //             });\r\n    //             youtubeDownload(req.body.idVideo, () => {\r\n    //                 console.log(\"ADD VIDEO: \" + JSON.stringify(req.body.idVideo));\r\n    //             });\r\n    //         } catch (error) {\r\n    //             console.log(\"error.error :> \" + error);\r\n    //             // console.log(\"error.reason :> \" +error.reason)\r\n    //             // console.log(\"error.message :> \" +error.message)\r\n    //             // console.log(\"error.errorType :> \" +error.errorType)\r\n    //             // console.log(\"--------------------------------------\")\r\n    //         }\r\n\r\n    //         youtubedl.getInfo(url, options, function (err, info) {\r\n    //             if (err) throw err;\r\n\r\n    //             DescargasCollection.insert({\r\n    //                 idFile: req.body.idVideo,\r\n    //                 nombreFile: info.title,\r\n    //                 tamanoFile: info.filesize,\r\n    //                 comentarios: info.description,\r\n    //                 descargadoPor: req.body.creadoPor,\r\n    //                 thumbnail: info.thumbnail,\r\n    //                 urlReal: \"/videos/\" + req.body.idVideo + \".mp4\",\r\n    //                 url: info.url,\r\n    //             });\r\n    //         });\r\n    //     } else {\r\n    //         res.writeHead(200, {\r\n    //             message: \"El fichero \" + req.body.idVideo + \" ya existe\",\r\n    //         });\r\n    //     }\r\n    //     // console.log('id:', info.id)\r\n    //     // console.log('title:', info.title)\r\n    //     // console.log('url:', info.url)\r\n    //     // console.log('thumbnail:', info.thumbnail)\r\n    //     // console.log('description:', info.description)\r\n    //     // console.log('filename:', info._filename)\r\n    //     // console.log('format id:', info)\r\n    //     // console.log('filesize id:', info.filesize)\r\n\r\n    //     res.end();\r\n    // });\r\n    endpoint.post(\"/pelis\", (req, res) => {\r\n        // console.log(req)\r\n        // console.log(req.body)\r\n        // console.log(PelisCollection.find({}, { descripcion: 0 }).fetch());\r\n        try {\r\n            let a = [];\r\n            PelisCollection.find({}).map((peliGeneral, i) => {\r\n                // console.log(peliGeneral);\r\n                a.push({\r\n                    _id: peliGeneral._id,\r\n                    nombrePeli: peliGeneral.nombrePeli,\r\n                    tamano: peliGeneral.tamano,\r\n                    urlBackground: peliGeneral.urlBackground,\r\n                    urlPeli: peliGeneral.urlPeli,\r\n                    // descripcion: descripcion,\r\n                    // vistas:vistas,\r\n                    // year:year,\r\n                    // clasificacion:clasificacion,\r\n                });\r\n            });\r\n            conteoPost = conteoPost + 1;\r\n            console.log(conteoPost + \" peticion\");\r\n\r\n            res.writeHead(200, {\r\n                json: JSON.stringify(a),\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error.error :> \" + error.error);\r\n            console.log(\"error.reason :> \" + error.reason);\r\n            console.log(\"error.message :> \" + error.message);\r\n            console.log(\"error.errorType :> \" + error.errorType);\r\n            console.log(\"--------------------------------------\");\r\n\r\n            res.writeHead(error.error, {\r\n                error: error.error,\r\n                reason: error.reason,\r\n                message: error.message,\r\n                errorType: error.errorType,\r\n            });\r\n        }\r\n\r\n        res.end();\r\n    });\r\n\r\n    endpoint.route('/ventasjson')\r\n        .get(function (req, res) {\r\n            const gastos = (id) => {\r\n                let totalAPagar = 0;\r\n                VentasCollection.find({}).map(element => {\r\n                    element.adminId == id && !element.cobrado && (totalAPagar += element.precio)\r\n                })\r\n                return totalAPagar\r\n            };\r\n            // this is GET /pet/:id\r\n            let resultado = []\r\n            Meteor.users.find().map(usuario => {\r\n                let pago = gastos(usuario._id)\r\n                pago && resultado.push({ usuario: `${usuario.profile.firstName} ${usuario.profile.lastName}`, debe: pago })\r\n            })\r\n\r\n            res.setHeader('Content-Type', 'application/json')\r\n            res.end(JSON.stringify(resultado))\r\n        })\r\n\r\n    endpoint.route('/usersjson')\r\n        .get(function (req, res) {\r\n            // this is GET /pet/:id\r\n            console.log(req.query);\r\n            let q = req.query ? req.query : {}\r\n            res.setHeader('Content-Type', 'application/json')\r\n            res.end(JSON.stringify(Meteor.users.find(q).fetch()))\r\n        })\r\n\r\n\r\n    endpoint.route('/updateuser')\r\n        .post(function (req, res) {\r\n            // this is DELETE /pet/:id\r\n\r\n            // try {\r\n            let query = req.query.id ? req.query.id : {}\r\n            let data = req.query ? req.query : {}\r\n            delete data[0]\r\n            console.log(query);\r\n            console.log(data);\r\n\r\n\r\n            var update = Meteor.users.update(\r\n                query,\r\n                { $set: data },\r\n                {\r\n                    multi: true,\r\n                    upsert: true\r\n                }\r\n            )\r\n            console.log(update);\r\n            // console.log(req.query);\r\n            res.end(JSON.stringify({\r\n                result: update\r\n            }))\r\n            // } catch (error) {\r\n            //   res.end(JSON.stringify({\r\n            //     error: `Error: ${error}`\r\n            //   }))\r\n            // }\r\n\r\n        })\r\n\r\n\r\n        \r\n  WebApp.connectHandlers.use(bodyParser.urlencoded({ extended: true }));\r\n  WebApp.connectHandlers.use(endpoint);\r\n}","import { Meteor } from \"meteor/meteor\";\r\nimport { OnlineCollection } from \"../imports/ui/pages/collections/collections\";\r\n\r\nimport router from \"router\";\r\n\r\nconst endpoint = router();\r\n\r\n// -------------------Este Proxy Funciona al FULLLLLLLLL-----------\r\n\r\nasync function conect(server, connectionId, userId, hostname) {\r\n  try {\r\n    await OnlineCollection.insert({\r\n      connectionId: `${server}${connectionId.toString()}`,\r\n      address: \"proxy: \" + Meteor.settings.public.IP,\r\n      userId: userId,\r\n      hostname: hostname,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  // await Meteor.users.update(userId, {\r\n  //   $set: {\r\n  //     online: true,\r\n  //   },\r\n  // });\r\n  // return true\r\n}\r\nasync function disconect(server, connectionId, stats) {\r\n  try {\r\n    // await console.log('remove ' + connectionId);\r\n    const conn = await OnlineCollection.findOne({\r\n      connectionId: `${server}${connectionId.toString()}`,\r\n      // server: process.env.ROOT_URL\r\n    });\r\n    const user = conn && conn.userId && Meteor.users.findOne(conn.userId);\r\n    let bytesGastados = Number(stats.srcTxBytes) + Number(stats.srcRxBytes);\r\n    // + Number(stats.trgTxBytes) + Number(stats. trgRxBytes)\r\n    let bytesGastadosGeneral =\r\n      Number(stats.srcTxBytes) +\r\n      Number(stats.srcRxBytes) +\r\n      Number(stats.trgTxBytes) +\r\n      Number(stats.trgRxBytes);\r\n    user &&\r\n      user._id &&\r\n      user.contandoProxy &&\r\n      (await Meteor.users.update(user._id, {\r\n        $inc: { megasGastadosinBytes: bytesGastados },\r\n      }));\r\n    user &&\r\n      user._id &&\r\n      user.contandoProxy &&\r\n      (await Meteor.users.update(user._id, {\r\n        $inc: { megasGastadosinBytesGeneral: bytesGastadosGeneral },\r\n      }));\r\n    conn && conn._id && (await OnlineCollection.remove(conn._id));\r\n    // await console.log(idofconn&&idofconn._id);\r\n    // await Meteor.users.update(userId, {\r\n    //   $set: {\r\n    //     online: true,\r\n    //   },\r\n    // });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nif (Meteor.isServer) {\r\n  \r\n  console.log(\"Iniciando Proxy por el puerto 3002\");\r\n  var cron = require(\"node-cron\");\r\n\r\n  const ProxyChain = require(\"proxy-chain\");\r\n  var bcrypt = require(\"bcrypt\");\r\n  // var sha256 = require(\"sha256\");\r\n  const crypto = require(\"crypto\");\r\n\r\n  var server2 \r\n  = new ProxyChain.Server({\r\n    // Port where the server will listen. By default 8000.\r\n    port: 3002,\r\n    authRealm: \"Service VidKar\",\r\n    // Enables verbose logging\r\n    // verbose: true,\r\n\r\n    // Custom user-defined function to authenticate incoming proxy requests,\r\n    // and optionally provide the URL to chained upstream proxy.\r\n    // The function must return an object (or promise resolving to the object) with the following signature:\r\n    // { requestAuthentication: Boolean, upstreamProxyUrl: String }\r\n    // If the function is not defined or is null, the server runs in simple mode.\r\n    // Note that the function takes a single argument with the following properties:\r\n    // * request      - An instance of http.IncomingMessage class with information about the client request\r\n    //                  (which is either HTTP CONNECT for SSL protocol, or other HTTP request)\r\n    // * username     - Username parsed from the Proxy-Authorization header. Might be empty string.\r\n    // * password     - Password parsed from the Proxy-Authorization header. Might be empty string.\r\n    // * hostname     - Hostname of the target server\r\n    // * port         - Port of the target server\r\n    // * isHttp       - If true, this is a HTTP request, otherwise it's a HTTP CONNECT tunnel for SSL\r\n    //                  or other protocols\r\n    // * connectionId - Unique ID of the HTTP connection. It can be used to obtain traffic statistics.\r\n    prepareRequestFunction: async ({\r\n      request,\r\n      username,\r\n      password,\r\n      hostname,\r\n      port,\r\n      isHttp,\r\n      connectionId,\r\n    }) => {\r\n      try {\r\n        const b = await Meteor.users.findOne({ username: username });\r\n        if (b) {\r\n          const userInput = crypto\r\n            .Hash(\"sha256\")\r\n            .update(password)\r\n            .digest(\"hex\");\r\n          const a = await bcrypt.compareSync(\r\n            userInput,\r\n            b && b.services.password.bcrypt\r\n          );\r\n          if (\r\n            !a ||\r\n            b.baneado ||\r\n            (b.ip ? !(b.ip == Meteor.settings.public.IP) : false)\r\n          ) {\r\n            return {\r\n              requestAuthentication: true,\r\n              failMsg: \"ContraseÃ±a incorrecta, Vuelva a intentarlo nuevamente\",\r\n            };\r\n          } else {\r\n            try {\r\n              connectionId && conect(\"3002:\", connectionId, b._id, hostname);\r\n              // if( await conect(connectionId,b&&b._id))\r\n              return {};\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n          }\r\n        } else {\r\n          return {\r\n            requestAuthentication: true,\r\n            failMsg: \"Usuario no Existe\",\r\n          };\r\n        }\r\n      } catch (error) {\r\n        // console.log(error.message);\r\n        return {\r\n          // If set to true, the client is sent HTTP 407 resposne with the Proxy-Authenticate header set,\r\n          // requiring Basic authentication. Here you can verify user credentials.\r\n          requestAuthentication: true,\r\n          // requestAuthentication: username !== 'bob' || password !== '123',\r\n\r\n          // Sets up an upstream HTTP proxy to which all the requests are forwarded.\r\n          // If null, the proxy works in direct mode, i.e. the connection is forwarded directly\r\n          // to the target server. This field is ignored if \"requestAuthentication\" is true.\r\n          // The username and password should be URI-encoded, in case it contains some special characters.\r\n          // See `parseUrl()` function for details.\r\n          // upstreamProxyUrl: `http://username:password@proxy.example.com:3128`,\r\n\r\n          // If \"requestAuthentication\" is true, you can use the following property\r\n          // to define a custom error message to return to the client instead of the default \"Proxy credentials required\"\r\n          failMsg:\r\n            \"Por Favor, reintentelo de nuevo, ocurrio un problema en el servidor\",\r\n        };\r\n      }\r\n    },\r\n  });\r\n\r\n  server2.listen(() => {\r\n    console.log(`Servidor Proxy iniciado por el puerto: ${server2.port}`);\r\n  });\r\n\r\n  // Emitted when HTTP connection is closed\r\n  server2.on(\"connectionClosed\", ({ connectionId, stats }) => {\r\n    // console.log(`Connection ${connectionId} closed`);\r\n    // console.dir(stats);\r\n    disconect(\"3002:\", connectionId, stats);\r\n  });\r\n  // Emitted when HTTP request fails\r\n  server2.on(\"requestFailed\", ({ request, error }) => {\r\n    console.log(`Request ${request.url} failed`);\r\n    console.error(error);\r\n  });\r\n\r\n  cron\r\n    .schedule(\r\n      \"0-59 0-23 1-31 1-12 *\",\r\n      async () => {\r\n        ///////////ACTUALIZAR VPN CONNECTADAS MIRANDO PARA EL CUERPO 135\r\n        // Meteor.users.find({ vpn: true }).forEach(async (user) => {\r\n\r\n        //   let disponible = false\r\n        //   try {\r\n        //     await tcpp.probe(`192.168.18.${user.vpnip}`, 135, async function (err, available) {\r\n        //       err && console.error(err)\r\n        //       disponible = available;\r\n        //       Meteor.users.update(user._id, {\r\n        //         $set: { vpnConnected: disponible }\r\n        //       })\r\n        //     })\r\n        //   } catch (error) {\r\n        //     console.error(error)\r\n        //   }\r\n        // })\r\n        ///////////////////////////////////////////////////////////////\r\n        try{\r\n          let arrayIds = [];\r\n          await server2.getConnectionIds().map((id) => {\r\n            arrayIds.push(\"3002:\" + id);\r\n          });\r\n          await OnlineCollection.find({\r\n            address: \"proxy: \" + Meteor.settings.public.IP,\r\n          }).forEach((connection) => {\r\n            !arrayIds.find((id) => connection.connectionId == id) && (\r\n              // console.log( connection.connectionId + \" NO ESTA CONECTADO\"),\r\n              OnlineCollection.remove(connection._id))\r\n          });\r\n        }catch(error){\r\n          console.error(error)\r\n        }\r\n       \r\n      },\r\n      {\r\n        scheduled: true,\r\n        timezone: \"America/Havana\",\r\n      }\r\n    )\r\n    .start();\r\n\r\n  // cron\r\n  // .schedule(\r\n  //   \"0-59 0-23 1-31 1-12 *\",\r\n  //   async () => {\r\n  //     let arrayIds = await server3.getConnectionIds();\r\n  //     await OnlineCollection.find({ address: \"proxy\" }).forEach(\r\n  //       async (connection) => {\r\n  //        await !arrayIds.find((id) => connection.connectionId == id) &&\r\n  //           (await OnlineCollection.remove({\r\n  //             connectionId: connection.connectionId,\r\n  //           }));\r\n  //       }\r\n  //     );\r\n  //   },\r\n  //   {\r\n  //     scheduled: true,\r\n  //     timezone: \"America/Havana\",\r\n  //   }\r\n  // )\r\n  // .start();\r\n  Meteor.methods({\r\n    closeproxy: ()=>{\r\n\r\n    // console.log(req)\r\n    // console.log(req.body)\r\n    // console.log(PelisCollection.find({}, { descripcion: 0 }).fetch());\r\n    try {\r\n      server2.close(true, () => {\r\n        console.log(`Proxy server2 Port:${server2.port} was closed.`);\r\n      });\r\n\r\n      return \"Se detuvo correctamente el proxy\"\r\n    } catch (error) {\r\n      console.log(\"----------------ERROR----------------------\");\r\n      console.log(error.error);\r\n      console.log(\"--------------------------------------\");\r\n\r\n      return `Hubo errores al detener el proxy!`\r\n\r\n      // res.send(error.error, {\r\n      //   error: error.error,\r\n      //   reason: error.reason,\r\n      //   message: error.message,\r\n      //   errorType: error.errorType,\r\n      // });\r\n    }\r\n\r\n    },\r\n    listenproxy:()=>{\r\n\r\n      \r\n    // console.log(req)\r\n    // console.log(req.body)\r\n    // console.log(PelisCollection.find({}, { descripcion: 0 }).fetch());\r\n    try {\r\n      server2 = new ProxyChain.Server({\r\n        // Port where the server will listen. By default 8000.\r\n        port: 3002,\r\n        authRealm: \"Service VidKar\",\r\n        // Enables verbose logging\r\n        // verbose: true,\r\n\r\n        // Custom user-defined function to authenticate incoming proxy requests,\r\n        // and optionally provide the URL to chained upstream proxy.\r\n        // The function must return an object (or promise resolving to the object) with the following signature:\r\n        // { requestAuthentication: Boolean, upstreamProxyUrl: String }\r\n        // If the function is not defined or is null, the server runs in simple mode.\r\n        // Note that the function takes a single argument with the following properties:\r\n        // * request      - An instance of http.IncomingMessage class with information about the client request\r\n        //                  (which is either HTTP CONNECT for SSL protocol, or other HTTP request)\r\n        // * username     - Username parsed from the Proxy-Authorization header. Might be empty string.\r\n        // * password     - Password parsed from the Proxy-Authorization header. Might be empty string.\r\n        // * hostname     - Hostname of the target server\r\n        // * port         - Port of the target server\r\n        // * isHttp       - If true, this is a HTTP request, otherwise it's a HTTP CONNECT tunnel for SSL\r\n        //                  or other protocols\r\n        // * connectionId - Unique ID of the HTTP connection. It can be used to obtain traffic statistics.\r\n        prepareRequestFunction: async ({\r\n          request,\r\n          username,\r\n          password,\r\n          hostname,\r\n          port,\r\n          isHttp,\r\n          connectionId,\r\n        }) => {\r\n          try {\r\n            const b = await Meteor.users.findOne({ username: username });\r\n            if (b) {\r\n              const userInput = crypto\r\n                .Hash(\"sha256\")\r\n                .update(password)\r\n                .digest(\"hex\");\r\n              const a = await bcrypt.compareSync(\r\n                userInput,\r\n                b && b.services.password.bcrypt\r\n              );\r\n              if (\r\n                !a ||\r\n                b.baneado ||\r\n                (b.ip ? !(b.ip == Meteor.settings.public.IP) : false)\r\n              ) {\r\n                return {\r\n                  requestAuthentication: true,\r\n                  failMsg:\r\n                    \"ContraseÃ±a incorrecta, Vuelva a intentarlo nuevamente\",\r\n                };\r\n              } else {\r\n                try {\r\n                  connectionId &&\r\n                    conect(\"3002:\", connectionId, b._id, hostname);\r\n                  // if( await conect(connectionId,b&&b._id))\r\n                  return {};\r\n                } catch (error) {\r\n                  console.log(error);\r\n                }\r\n              }\r\n            } else {\r\n              return {\r\n                requestAuthentication: true,\r\n                failMsg: \"Usuario no Existe\",\r\n              };\r\n            }\r\n          } catch (error) {\r\n            // console.log(error.message);\r\n            return {\r\n              // If set to true, the client is sent HTTP 407 resposne with the Proxy-Authenticate header set,\r\n              // requiring Basic authentication. Here you can verify user credentials.\r\n              requestAuthentication: true,\r\n              // requestAuthentication: username !== 'bob' || password !== '123',\r\n\r\n              // Sets up an upstream HTTP proxy to which all the requests are forwarded.\r\n              // If null, the proxy works in direct mode, i.e. the connection is forwarded directly\r\n              // to the target server. This field is ignored if \"requestAuthentication\" is true.\r\n              // The username and password should be URI-encoded, in case it contains some special characters.\r\n              // See `parseUrl()` function for details.\r\n              // upstreamProxyUrl: `http://username:password@proxy.example.com:3128`,\r\n\r\n              // If \"requestAuthentication\" is true, you can use the following property\r\n              // to define a custom error message to return to the client instead of the default \"Proxy credentials required\"\r\n              failMsg:\r\n                \"Por Favor, reintentelo de nuevo, ocurrio un problema en el servidor\",\r\n            };\r\n          }\r\n        },\r\n      });\r\n\r\n      server2.listen(() => {\r\n        console.log(`Servidor Proxy iniciado por el puerto: ${server2.port}`);\r\n      });\r\n\r\n      // Emitted when HTTP connection is closed\r\n      server2.on(\"connectionClosed\", ({ connectionId, stats }) => {\r\n        // console.log(`Connection ${connectionId} closed`);\r\n        // console.dir(stats);\r\n        disconect(\"3002:\", connectionId, stats);\r\n      });\r\n      // Emitted when HTTP request fails\r\n      server2.on(\"requestFailed\", ({ request, error }) => {\r\n        console.log(`Request ${request.url} failed`);\r\n        console.error(error);\r\n      });\r\n\r\n      return \"Se inicio correctamente el proxy\"\r\n\r\n    } catch (error) {\r\n      console.log(\"----------------ERROR----------------------\");\r\n      console.log(error);\r\n      console.log(\"--------------------------------------\");\r\n\r\n      return \"Hubo errores al iniciar el proxy!\"\r\n\r\n      // res.end(error.error, {\r\n      //   error: error.error,\r\n      //   reason: error.reason,\r\n      //   message: error.message,\r\n      //   errorType: error.errorType,\r\n      // });\r\n    }\r\n\r\n    }\r\n  });\r\n\r\n  // Meteor.call(\"listenproxy\",(error,result)=>{\r\n  //   console.log(result)\r\n  // })\r\n}\r\n","import { Meteor } from \"meteor/meteor\";\r\n\r\nimport {\r\n    OnlineCollection,\r\n    PelisCollection,\r\n    MensajesCollection,\r\n    ServersCollection,\r\n    PreciosCollection,\r\n    VentasCollection,\r\n    FilesCollection,\r\n    VersionsCollection,\r\n    LogsCollection,\r\n    DescargasCollection,\r\n    TVCollection,\r\n    RegisterDataUsersCollection\r\n  } from \"../imports/ui/pages/collections/collections\";\r\n\r\n\r\n    if (Meteor.isServer) {\r\n        Meteor.startup(() => {\r\n            console.log(\"Iniciando Server Meteor...\");\r\n\r\n            /////// mover todas las imagenes para user.picture\r\n            Meteor.users.find({}).map(us => {\r\n              us.services && us.services.facebook && us.services.facebook.picture.data.url &&\r\n                Meteor.users.update(us._id, { $set: { picture: us.services.facebook.picture.data.url } })\r\n        \r\n                us.services && us.services.google && us.services.google.picture &&\r\n                Meteor.users.update(us._id, { $set: { picture: us.services.google.picture } })\r\n            })\r\n        \r\n        \r\n            process.env.ROOT_URL = Meteor.settings.public.ROOT_URL;\r\n            // process.env.MONGO_URL = Meteor.settings.public.MONGO_URL;\r\n        \r\n            console.log(\"ROOT_URL: \" + process.env.ROOT_URL);\r\n            console.log(\"MONGO_URL: \" + process.env.MONGO_URL);\r\n        \r\n            OnlineCollection.remove({});\r\n           // OnlineCollection.remove({address: `127.0.0.1`});\r\n        \r\n           const settings = Meteor.settings;\r\n        \r\n           if (settings) {\r\n           \r\n            ServiceConfiguration.configurations.remove({\r\n              service: 'google'\r\n            });\r\n          \r\n            ServiceConfiguration.configurations.insert({\r\n              service: 'google',\r\n              clientId: settings.google.client_id,\r\n              secret: settings.google.client_secret,\r\n              validClientIds: settings.google.validClientIds\r\n            });\r\n          \r\n              ServiceConfiguration.configurations.remove({\r\n                service: \"facebook\",\r\n              });\r\n          \r\n              ServiceConfiguration.configurations.insert({\r\n                service: \"facebook\",\r\n                appId: settings.facebook.appId,\r\n                secret: settings.facebook.secret,\r\n              });\r\n        \r\n        \r\n        \r\n          }\r\n            if (Meteor.users.find({ \"profile.role\": \"admin\" }).count() == 0) {\r\n              console.log(\"CREANDO USER ADMIN\");\r\n              const user = {\r\n                email: \"carlosmbinf@gmail.com\",\r\n                password: \"lastunas123\",\r\n                firstName: \"Carlos\",\r\n                lastName: \"Medina\",\r\n                role: \"admin\",\r\n                creadoPor: \"Server\",\r\n                baneado: false,\r\n                edad: 26,\r\n                username:\"carlosmbinf\"\r\n              };\r\n              try {\r\n                Accounts.createUser(user);\r\n                console.log(\"ADD OK\");\r\n              } catch (error) {\r\n                console.log(\"NO SE PUDO CREAR EL USER ADMIN\");\r\n              }\r\n            }\r\n            console.log(\"YA HAY UN USER ADMIN\");\r\n            // const youtubedl = require('youtube-dl')\r\n            // const url = 'http://www.youtube.com/watch?v=WKsjaOqDXgg'\r\n            // youtubedl.exec(url, ['-x', '--audio-format', 'mp3'], {}, function(err, output) {\r\n            //   if (err) throw err\r\n            //   // console.log(output.join('\\n'))\r\n            // })\r\n          });\r\n    }","import { Meteor } from \"meteor/meteor\";\r\nimport { LogsCollection, PelisCollection, RegisterDataUsersCollection } from \"../imports/ui/pages/collections/collections\";\r\n\r\nvar cron = require(\"node-cron\");\r\n\r\n\r\nif (Meteor.isServer) {\r\n  console.log(\"Cargando Tareas...\");\r\n\r\n  try {\r\n    cron\r\n      .schedule(\r\n        // \"1-59 * * * *\",\r\n        \"0 0 1 1-12 *\",\r\n        async () => {\r\n          console.log(new Date());\r\n          let users = await Meteor.users.find({\r\n            $or: [\r\n              { baneado: false },\r\n              { megasGastadosinBytes: { $gte: 1 } },\r\n              { megasGastadosinBytesGeneral: { $gte: 1 } },\r\n              { vpn: true },\r\n              { vpnMbGastados: { $gte: 1 } },\r\n            ],\r\n          });\r\n          await console.log(\"Count \" + users.count());\r\n          // await console.log(\"running every minute to 1 from 5\");\r\n\r\n          await users.forEach(async (user) => {\r\n            ////////////CONSUMOS PROXY/////////////\r\n            console.log(`REVISANDO A => ${user.username}`);\r\n\r\n            user.megasGastadosinBytes > 0 &&\r\n              (await RegisterDataUsersCollection.insert({\r\n                userId: user._id,\r\n                type: \"proxy\",\r\n                megasGastadosinBytes: user.megasGastadosinBytes,\r\n                megasGastadosinBytesGeneral:\r\n                  user.megasGastadosinBytesGeneral,\r\n              }));\r\n\r\n            user.vpnMbGastados > 0 &&\r\n              (await RegisterDataUsersCollection.insert({\r\n                userId: user._id,\r\n                type: \"vpn\",\r\n                vpnMbGastados: user.vpnMbGastados,\r\n              }));\r\n\r\n            ///////////////Dejar en cero el consumo de los usuarios\r\n            await Meteor.users.update(user._id, {\r\n              $set: {\r\n                megasGastadosinBytes: 0,\r\n                megasGastadosinBytesGeneral: 0,\r\n                vpnMbGastados: 0,\r\n              },\r\n            });\r\n\r\n            ////////////////Banear PROXY/////////////\r\n            !user.isIlimitado &&\r\n              user.baneado == false &&\r\n              user.profile.role !== \"admin\" &&\r\n              (await (Meteor.users.update(user._id, {\r\n                $set: {\r\n                  baneado: true,\r\n                },\r\n              }),\r\n                LogsCollection.insert({\r\n                  type: \"Bloqueo Proxy\",\r\n                  userAfectado: user._id,\r\n                  userAdmin: \"server\",\r\n                  message:\r\n                    \"El server \" +\r\n                    process.env.ROOT_URL +\r\n                    \" Bloqueo automaticamente el proxy por ser dia Primero de cada Mes\",\r\n                }),\r\n                Meteor.call(\r\n                  \"sendMensaje\",\r\n                  user,\r\n                  {\r\n                    text: `El server Bloqueo automaticamente el proxy a: ${user.profile.firstName} ${user.profile.lastName} por ser dia Primero de cada Mes`,\r\n                  },\r\n                  \"VidKar Bloqueo de Proxy\"\r\n                )));\r\n            ////////////////Banear VPN/////////////\r\n            !user.vpnisIlimitado &&\r\n              user.vpn == true &&\r\n              user.profile.role !== \"admin\" &&\r\n              (await (Meteor.users.update(user._id, {\r\n                $set: {\r\n                  vpn: false,\r\n                },\r\n              }),\r\n                LogsCollection.insert({\r\n                  type: \"VPN\",\r\n                  userAfectado: user._id,\r\n                  userAdmin: \"server\",\r\n                  message: `El server ${process.env.ROOT_URL} DesactivÃ³ la VPN para ${user.profile.firstName} ${user.profile.lastName} dia Primero de cada Mes`,\r\n                }),\r\n                Meteor.call(\r\n                  \"sendMensaje\",\r\n                  user,\r\n                  {\r\n                    text: `El server DesactivÃ³ la VPN para ${user.profile.firstName} ${user.profile.lastName} por ser dia Primero de cada Mes`,\r\n                  },\r\n                  \"VidKar Bloqueo de VPN\"\r\n                )));\r\n          });\r\n        },\r\n        {\r\n          scheduled: true,\r\n          timezone: \"America/Havana\",\r\n        }\r\n      )\r\n      .start();\r\n\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  try {\r\n    //////////////////Banear proxy ///////////////////\r\n    cron\r\n      .schedule(\r\n        \"0-59 * * * *\",\r\n        async () => {\r\n          let users = await Meteor.users.find({ baneado: false }, {\r\n            fields: {\r\n              _id: 1,\r\n              profile: 1,\r\n              isIlimitado: 1,\r\n              fechaSubscripcion: 1,\r\n              megasGastadosinBytes: 1,\r\n              megas: 1,\r\n              baneado: 1,\r\n              bloqueadoDesbloqueadoPor: 1,\r\n              emails: 1,\r\n            }\r\n          });\r\n          await users.forEach((user) => {\r\n            // !(user.username == \"carlosmbinf\") &&\r\n            // user.profile.role != \"admin\" &&\r\n            (user.isIlimitado\r\n              ? new Date() >=\r\n              new Date(\r\n                user.fechaSubscripcion\r\n                  ? user.fechaSubscripcion\r\n                  : new Date()\r\n              ) &&\r\n              !user.baneado &&\r\n              (Meteor.users.update(user._id, {\r\n                $set: { baneado: true },\r\n              }),\r\n                (LogsCollection.insert({\r\n                  type: \"Bloqueo Proxy\",\r\n                  userAfectado: user._id,\r\n                  userAdmin: \"server\",\r\n                  message:\r\n                    \"El server \" + process.env.ROOT_URL + \" Bloqueo automaticamente el proxy porque llego a la fecha limite\"\r\n                })),\r\n                Meteor.call(\"sendMensaje\",\r\n                  user,\r\n                  {\r\n                    text: `El server ${process.env.ROOT_URL} Bloqueo automaticamente el proxy de ${user.profile.firstName} ${user.profile.lastName}  porque llego a la fecha limite.`,\r\n                  },\r\n                  'VidKar Bloqueo de Proxy')\r\n              )\r\n              : (user.megasGastadosinBytes ? user.megasGastadosinBytes : 0) >= ((user.megas ? Number(user.megas) : 0) * 1024000) &&\r\n              !user.baneado &&\r\n              (Meteor.users.update(user._id, {\r\n                $set: { baneado: true },\r\n              }),\r\n                LogsCollection.insert({\r\n                  type: \"Bloqueo Proxy\",\r\n                  userAfectado: user._id,\r\n                  userAdmin: \"server\",\r\n                  message:\r\n                    \"El server \" + process.env.ROOT_URL + \" Bloqueo automaticamente el proxy porque consumio: \" + user.megas + \" MB\"\r\n                }), Meteor.call(\"sendMensaje\",\r\n                  user,\r\n                  {\r\n                    text: `El server  ${process.env.ROOT_URL} Bloqueo automaticamente el proxy a: ${user.profile.firstName} ${user.profile.lastName} porque consumio: ${user.megas} MB`,\r\n                  },\r\n                  'VidKar Bloqueo de Proxy')\r\n              ));\r\n          });\r\n        },\r\n        {\r\n          scheduled: true,\r\n          timezone: \"America/Havana\",\r\n        }\r\n      )\r\n      .start();\r\n\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  try {\r\n    //////////Banear VPN //////////////\r\n    cron\r\n      .schedule(\r\n        \"0-59 * * * *\",\r\n        async () => {\r\n          let users = await Meteor.users.find({ vpn: true }\r\n            , {\r\n              fields: {\r\n                _id: 1,\r\n                vpnMbGastados: 1,\r\n                profile: 1,\r\n                vpnmegas: 1,\r\n                vpn: 1,\r\n                bloqueadoDesbloqueadoPor: 1,\r\n                emails: 1,\r\n                vpnisIlimitado: 1,\r\n                vpnfechaSubscripcion: 1\r\n              }\r\n            }\r\n          );\r\n          await users.map((user) => {\r\n            // (new Date(new Date()) > user.vpnfechaSubscripcion) &&  console.log(user)\r\n            // console.log(new Date(new Date()));\r\n            // console.log(user.vpnfechaSubscripcion);\r\n            // console.log((new Date(new Date()) > user.vpnfechaSubscripcion))\r\n            // !(user.username == \"carlosmbinf\") &&\r\n            user.vpnisIlimitado && user.vpnfechaSubscripcion &&\r\n              new Date(new Date()) > user.vpnfechaSubscripcion &&\r\n              (Meteor.users.update(user._id, {\r\n                $set: { vpn: false },\r\n              }), LogsCollection.insert({\r\n                type: \"Bloqueo VPN\",\r\n                userAfectado: user._id,\r\n                userAdmin: \"server\",\r\n                message:\r\n                  \"El server \" + process.env.ROOT_URL + \" Bloqueo automaticamente la VPN porque llego a la fecha limite\"\r\n              }))\r\n            try {\r\n              user.vpnisIlimitado && user.vpnfechaSubscripcion &&\r\n                new Date(new Date()) > user.vpnfechaSubscripcion &&\r\n                Meteor.call(\"sendMensaje\",\r\n                  user,\r\n                  {\r\n                    text: `El server Bloqueo automaticamente la VPN a: ${user.profile.firstName} ${user.profile.lastName} porque paso la fecha limite: ${user.vpnfechaSubscripcion}`,\r\n                  },\r\n                  'VidKar Bloqueo de VPN')\r\n            } catch (error) {\r\n              console.log(\"NO SE PUDO ENVIAR EL EMAIL\")\r\n            }\r\n\r\n\r\n\r\n            !user.vpnisIlimitado && (user.vpnMbGastados ? user.vpnMbGastados : 0) >= ((user.vpnmegas ? Number(user.vpnmegas) : 0) * 1024000) &&\r\n              (Meteor.users.update(user._id, {\r\n                $set: { vpn: false },\r\n              }),\r\n                LogsCollection.insert({\r\n                  type: \"Bloqueo VPN\",\r\n                  userAfectado: user._id,\r\n                  userAdmin: \"server\",\r\n                  message:\r\n                    \"El server \" + process.env.ROOT_URL + \" Bloqueo automaticamente la VPN porque consumio: \" + user.vpnmegas + \" MB\"\r\n                }), Meteor.call(\"sendMensaje\",\r\n                  user,\r\n                  {\r\n                    text: `El server Bloqueo automaticamente la VPN a: ${user.profile.firstName} ${user.profile.lastName} porque consumio sus: ${user.vpnmegas} MB`,\r\n                  },\r\n                  'VidKar Bloqueo de VPN')\r\n              );\r\n          });\r\n        },\r\n        {\r\n          scheduled: true,\r\n          timezone: \"America/Havana\",\r\n        }\r\n      )\r\n      .start();\r\n\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  try {\r\n    //////////ACTUALIZAR TRAILERS //////////////\r\n    cron\r\n      .schedule(\r\n        \"0 * * * *\",\r\n        async () => {\r\n           try {\r\n            const IMDb = await require('imdb-light');\r\n\r\n            await PelisCollection.find({}, { fields: { _id: 1, nombrePeli: 1, idimdb: 1 } }).forEach(async (peli) => {\r\n\r\n              await console.log(`Actualizando a ${peli.nombrePeli}`)\r\n\r\n               peli.idimdb && await IMDb.trailer(peli.idimdb,  (url) => {\r\n                   console.log(peli.nombrePeli + \" => Actualizando URL Pelicula\")  // output is direct mp4 url (also have expiration timeout)\r\n\r\n                   url && PelisCollection.update(\r\n                     { _id: peli._id },\r\n                     {\r\n                       $set: {\r\n                         urlTrailer: url\r\n                         // clasificacion: details.Genres.split(\", \")\r\n                       },\r\n                     }\r\n                   );\r\n               })\r\n\r\n             })\r\n\r\n          } catch (error) {\r\n\r\n          }\r\n\r\n        },\r\n        {\r\n          scheduled: true,\r\n          timezone: \"America/Havana\",\r\n        }\r\n      )\r\n      .start();\r\n\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  try {\r\n    //////////ACTUALIZAR TRAILERS //////////////\r\n    cron\r\n      .schedule(\r\n        \"30 0 * * *\",\r\n        async () => {\r\n           try {\r\n           await Meteor.call('closeproxy', function (error, result) {\r\n            console.log(`${result} a las ${new Date()}`)\r\n           });\r\n           \r\n           await Meteor.call('listenproxy', function (error, result) {\r\n            console.log(`${result} a las ${new Date()}`)\r\n           });\r\n\r\n          } catch (error) {\r\n            console.log(error)\r\n          }\r\n\r\n        },\r\n        {\r\n          scheduled: true,\r\n          timezone: \"America/Havana\",\r\n        }\r\n      )\r\n      .start();\r\n\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n}","import { Meteor } from \"meteor/meteor\";\r\nimport { Accounts } from 'meteor/accounts-base'\r\nimport {\r\n  OnlineCollection\r\n} from \"../imports/ui/pages/collections/collections\";\r\n\r\nimport \"./startup\";\r\nimport \"./metodos\";\r\nimport \"./publicaciones\";\r\nimport \"./serverproxy3002\";\r\nimport \"./tareas\";\r\nimport \"./rutas\";\r\n\r\n\r\nvar http = require(\"http\");\r\nhttp.post = require(\"http-post\");\r\n\r\nif (Meteor.isClient) {\r\n  // Group.subscription = Meteor.subscribe(\"links\");\r\n}\r\n\r\n\r\n\r\nvar appRoot = require(\"app-root-path\");\r\n//   try{\r\n//     SSLProxy({\r\n//         port: 8080, //or 443 (normal port/requires sudo)\r\n//         ssl : {\r\n//           key: fs.readFileSync(appRoot.path + '/server/conf/key.pem'),\r\n//           cert: fs.readFileSync(appRoot.path + '/server/conf/cert.pem')\r\n\r\n//             //Optional CA\r\n//             //Assets.getText(\"ca.pem\")\r\n//         }\r\n//     });\r\n//   }catch(error){\r\n//     console.error(error)\r\n//   }\r\n\r\n// var PATH_TO_KEY =\r\n//   appRoot.path + \"/server/conf/vidkar.key\";\r\n// var PATH_TO_CERT =\r\n//   appRoot.path + \"/server/conf/vidkar.crt\";\r\n// var httpProxy = require(\"http-proxy\");\r\n// var options = {\r\n//   ssl: {\r\n//     key: fs.readFileSync(PATH_TO_KEY, \"utf8\"),\r\n//     cert: fs.readFileSync(PATH_TO_CERT, \"utf8\"),\r\n//   },\r\n//   target: \"http://localhost:6000\",\r\n//   ws: true,\r\n//   xfwd: true,\r\n// };\r\n// var server = httpProxy.createProxyServer(options).listen(5000);\r\n// console.log(\"httpProxy running with target at \" + options.target);\r\n\r\n// -------------------Este Proxy Funciona al FULLLLLLLLL-----------\r\n// const proxy = require('@ucipass/proxy')\r\n// const proxyPort = 3002\r\n// proxy(proxyPort)\r\n//   .then(() => {\r\n//     // Use it for a while....\r\n//   })\r\n//   .then((server) => {\r\n//     // console.log(server);\r\n//     // server.stop()\r\n//   })\r\n\r\n\r\n\r\n// var httpProxy = require('http-proxy');\r\n// const http = require(\"http\");\r\n// const basicAuth = require(\"basic-auth\");\r\n//   const port = 3003;\r\n//   const target = \"https://www.google.es\";\r\n//   const auth = \"krly:lastunas123\";\r\n\r\n//   if (!(target && port && auth)) {\r\n//     console.log(\"Usage: basic-auth-proxy-server <port> <backend> <auth>\");\r\n//     console.log(\" - port       : port for proxy server e.g. 8000\");\r\n//     console.log(\" - backend    : proxy target address e.g. http://localhost:3000\");\r\n//     console.log(\" - auth       : {user}:{password} e.g. tom:12341234\");\r\n//     process.exit(1);\r\n//   }\r\n\r\n//   const proxy2 = httpProxy.createProxyServer();\r\n\r\n//   http\r\n//     .createServer(\r\n//       {\r\n//         ssl: {\r\n//           key: fs.readFileSync(PATH_TO_KEY, \"utf8\"),\r\n//           cert: fs.readFileSync(PATH_TO_CERT, \"utf8\"),\r\n//         },\r\n//       },\r\n//       (req, res) => {\r\n//         const [name, password] = auth.split(\":\");\r\n//         const credential = basicAuth(req);\r\n//         console.log(credential);\r\n\r\n//         if (\r\n//           !(\r\n//             credential &&\r\n//             credential.name === name &&\r\n//             credential.pass === password\r\n//           )\r\n//         ) {\r\n//           res.writeHead(401, {\r\n//             \"WWW-Authenticate\": 'Basic realm=\"secret zone\"',\r\n//           });\r\n//           res.end(\"Access denied\");\r\n//         } else {\r\n//           //  console.log(req)\r\n//           console.log(req.url);\r\n//           // console.log(req.hostname)\r\n//           var option = {\r\n//             ssl: {\r\n//               key: fs.readFileSync(PATH_TO_KEY, \"utf8\"),\r\n//               cert: fs.readFileSync(PATH_TO_CERT, \"utf8\"),\r\n//             },\r\n//             ws: true,\r\n//             xfwd: true,\r\n//             // secure:true,\r\n//             followRedirects: true,\r\n//             hostRewrite: true,\r\n//             autoRewrite: true,\r\n//             changeOrigin: true,\r\n//             ignorePath: true,\r\n//             // selfHandleResponse:true,\r\n\r\n//             target: req.url,\r\n//           };\r\n//           try {\r\n//             proxy2.web(req, res, option);\r\n//           } catch (error) {\r\n//             console.log(error);\r\n//           }\r\n//           // console.log(req)\r\n//         }\r\n//       }\r\n//     )\r\n//     .listen(port);\r\n\r\n// If the Links collection is empty, add some data.\r\n\r\n// Meteor.users.allow({\r\n//   instert() { return true; }\r\n// });\r\nif (Meteor.isServer) {\r\n\r\n  Meteor.onConnection(function (connection) {\r\n    OnlineCollection.insert({\r\n      _id: connection.id,\r\n      address: connection.clientAddress,\r\n    });\r\n\r\n    connection.onClose(function () {\r\n      OnlineCollection.remove(connection.id);\r\n    });\r\n  });\r\n\r\n  Accounts.onLogin(function (info) {\r\n    var connectionId = info.connection.id;\r\n    var user = info.user;\r\n    var userId = user._id;\r\n\r\n    OnlineCollection.update(connectionId, {\r\n      $set: {\r\n        userId: userId,\r\n        loginAt: new Date(),\r\n      },\r\n    });\r\n    // Meteor.users.update(userId, {\r\n    //   $set: {\r\n    //     online: true,\r\n    //   },\r\n    // });\r\n  });\r\n\r\n  Accounts.onLogout(function (info) {\r\n    var connectionId = info.connection.id;\r\n    OnlineCollection.update(connectionId, {\r\n      $set: {\r\n        userId: \"\",\r\n      },\r\n    });\r\n    // Meteor.users.update(info.user._id, {\r\n    //   $set: {\r\n    //     online: false,\r\n    //   },\r\n    // });\r\n  });\r\n\r\n  Accounts.onCreateUser(function (options, user) {\r\n    // console.log(\"options > \" + JSON.stringify(options))\r\n    // console.log(\"user > \" + JSON.stringify(user))\r\n    if (user.services.facebook) {\r\n  \r\n      //  user.username = user.services.facebook.name;\r\n      // let usuario =  Meteor.users.findOne({ \"services.facebook.name\": user.services.facebook.name })\r\n      let usuario = user.services.facebook.email ? Meteor.users.findOne({ \"emails.address\": user.services.facebook.email }) : Meteor.users.findOne({ \"services.facebook.first_name\": user.services.facebook.first_name, \"services.facebook.last_name\": user.services.facebook.last_name })\r\n  \r\n      usuario ?\r\n        (console.log(`Usuario de FACEBOOK ${usuario._id} actualizado`),\r\n          usuario.services.facebook = user.services.facebook,\r\n          user = usuario,\r\n          user.profile = {\r\n            firstName: user.services.facebook.first_name,\r\n            lastName: user.services.facebook.last_name,\r\n            name: user.services.facebook.name,\r\n            role: user.profile.role,\r\n          },\r\n          user.picture = user.services.facebook.picture.data.url,\r\n      Meteor.users.remove(usuario._id)\r\n  \r\n        )\r\n        : (console.log(`Usuario de FACEBOOK ${user._id} Creado`),\r\n          (user.emails = [{ address: user.services.facebook.email }]),\r\n          (user.profile = {\r\n            firstName: user.services.facebook.first_name,\r\n            lastName: user.services.facebook.last_name,\r\n            name: user.services.facebook.name,\r\n            role: \"user\",\r\n          }),\r\n          (user.online = false),\r\n          (user.creadoPor = \"Facebook\"),\r\n          (user.baneado = true),\r\n          (user.picture = user.services.facebook.picture.data.url),\r\n          (user.descuentoproxy = 0),\r\n          (user.descuentovpn = 0),\r\n          (user.contandoProxy = true),\r\n          (user.contandoVPN = true)\r\n          );\r\n  \r\n      return user;\r\n  \r\n    } else if (user.services.google) {\r\n      //  user.username = user.services.facebook.name;\r\n  \r\n      let usuario = user.services.google.email && Meteor.users.findOne({ \"emails.address\": user.services.google.email })\r\n      usuario ?\r\n        (console.log(`Usuario de GOOGLE ${usuario._id} actualizado`),\r\n          usuario.services.google = user.services.google,\r\n          user = usuario,\r\n          user.profile = {\r\n            firstName: user.services.google.given_name,\r\n            lastName: user.services.google.family_name,\r\n            name: user.services.google.name,\r\n            role: user.profile.role,\r\n          },\r\n          user.picture = user.services.google.picture,\r\n          Meteor.users.remove(usuario._id)       \r\n          )\r\n        : (console.log(`Usuario de GOOGLE ${user._id} Creado`),\r\n          (user.emails = [{ address: user.services.google.email }]),\r\n          (user.profile = {\r\n            firstName: user.services.google.given_name,\r\n            lastName: user.services.google.family_name,\r\n            name: user.services.google.name,\r\n            role: \"user\",\r\n          }),\r\n          (user.online = false),\r\n          (user.creadoPor = \"Google\"),\r\n          (user.baneado = true),\r\n          (user.picture = user.services.google.picture),\r\n          (user.descuentoproxy = 0),\r\n          (user.descuentovpn = 0),\r\n          (user.contandoProxy = true),\r\n          (user.contandoVPN = true));\r\n      return user;\r\n  \r\n    } else {\r\n      const profile = {\r\n        firstName: options.firstName,\r\n        lastName: options.lastName,\r\n        role: options.role,\r\n      };\r\n  \r\n      // user.username = options.firstName + options.lastName\r\n      user.profile = profile;\r\n      user.creadoPor = options.creadoPor;\r\n      user.bloqueadoDesbloqueadoPor = options.creadoPor;\r\n      user.edad = options.edad;\r\n      user.online = false;\r\n      user.baneado = true;\r\n      user.descuentoproxy = 0;\r\n      user.descuentovpn = 0;\r\n      user.contandoProxy = true;\r\n      user.contandoVPN = true;\r\n      console.log(`user: \\n${JSON.stringify(user)}\\n-----------------------\\n`)\r\n      console.log(`options: \\n${JSON.stringify(options)}\\n-----------------------\\n`)\r\n  \r\n      return user;\r\n    }\r\n  \r\n  });\r\n\r\n  Meteor.users.after.insert(function (userId, doc) {\r\n    // console.log(userId);\r\n    console.log(`Usuario Creado con id => ${doc._id}`);\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n"]}